{"version":3,"file":"component---src-templates-project-tsx-582ac461c057d6fdfa30.js","mappings":"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","sources":["webpack://jorge.room/./node_modules/@chakra-ui/breadcrumb/dist/esm/breadcrumb.js","webpack://jorge.room/./src/templates/project.tsx"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { getValidChildren } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\n/**\n * React component that separates each breadcrumb link\n */\n\nexport var BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n      rest = _objectWithoutPropertiesLoose(props, [\"spacing\"]);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\n\nexport var BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      as = props.as,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"as\", \"className\"]);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nexport var BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      separator = props.separator,\n      isLastChild = props.isLastChild,\n      spacing = props.spacing,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  var styles = useStyles();\n\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nexport var Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var children = ownProps.children,\n      _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      _ownProps$separator = ownProps.separator,\n      separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n      className = ownProps.className,\n      rest = _objectWithoutPropertiesLoose(ownProps, [\"children\", \"spacing\", \"separator\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}","import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Breadcrumb,\n    BreadcrumbItem,\n    BreadcrumbLink,\n    Flex,\n    Heading,\n    Image,\n    List,\n    ListItem,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\n\nimport \"./markdown.css\";\n\nconst ProjectTemplate = ({ data }) => {\n    const project = data.markdownRemark;\n\n    const theme = {\n        colors: {\n            primary: project.frontmatter.theme_color_primary || \"#db98b5\",\n            secondary: project.frontmatter.theme_color_secondary || \"#36557b\",\n            fontColor: project.frontmatter.theme_color_fontcolor || \"#053a63\",\n        },\n    };\n\n    return (\n        <Layout slide={-1}>\n            <SEO\n                title={project.frontmatter.name}\n                description={\n                    \"Jorge's Room - \" + project.frontmatter.short_description\n                }\n                image={project.frontmatter.illustration}\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0 30px\", \"0 100px\"]}\n            >\n                <Flex flexDir=\"column\" mb=\"35px\">\n                    {/* Breadcrumb e cabeçalho */}\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem>\n                                <Link to=\"/#projetos\">Projetos</Link>\n                            </BreadcrumbItem>\n\n                            <BreadcrumbItem isCurrentPage>\n                                <BreadcrumbLink href=\"#\">\n                                    {project.frontmatter.name}\n                                </BreadcrumbLink>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n\n                    <Flex\n                        flexDir=\"column\"\n                        position=\"relative\"\n                        w=\"100%\"\n                        height=\"auto\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        p=\"30px\"\n                        color=\"#EEE\"\n                    >\n                        <Box\n                            backgroundColor=\"#000\"\n                            backgroundImage=\"linear-gradient( 112.1deg,  rgba(32,38,57,1) 11.4%, rgba(63,76,119,1) 70.2% )\"\n                            position=\"absolute\"\n                            h=\"100%\"\n                            w=\"200%\"\n                            left={-100}\n                            bottom={0}\n                            zIndex={-1}\n                            opacity={0.9}\n                            overflow=\"hidden\"\n                        >\n                            {project.frontmatter.cover ? (\n                                <>\n                                    <Box\n                                        position=\"absolute\"\n                                        background=\"linear-gradient( 112.1deg,  rgba(32,38,57,0.6) 11.4%, rgba(63,76,119,0.6) 70.2% )\"\n                                        w=\"100%\"\n                                        h=\"100%\"\n                                        top={0}\n                                        left={0}\n                                    ></Box>\n                                    <Image\n                                        src={project.frontmatter.cover}\n                                        alt={\n                                            \"Capa do project \" +\n                                            project.frontmatter.name\n                                        }\n                                        objectFit=\"cover\"\n                                        boxSize=\"100%\"\n                                    />\n                                </>\n                            ) : (\n                                <Box\n                                    boxSize=\"100%\"\n                                    bgColor={\n                                        project.frontmatter.theme_color_primary\n                                    }\n                                >\n                                    {\" \"}\n                                </Box>\n                            )}\n                        </Box>\n                        <Flex justifyContent=\"center\">\n                            {project.frontmatter.icon ? (\n                                <Image\n                                    alt={project.frontmatter.name}\n                                    src={project.frontmatter.icon}\n                                    maxH=\"90px\"\n                                    objectFit=\"contain\"\n                                />\n                            ) : (\n                                <Flex\n                                    flexGrow={1}\n                                    minH=\"80px\"\n                                    justifyContent=\"center\"\n                                    alignContent=\"center\"\n                                    flexDir=\"column\"\n                                >\n                                    <Heading\n                                        fontFamily=\"FiraCode\"\n                                        fontWeight=\"bolder\"\n                                        fontSize=\"32px\"\n                                    >\n                                        {project.frontmatter.name}\n                                    </Heading>\n                                </Flex>\n                            )}\n                        </Flex>\n\n                        <Flex justifyContent=\"center\" mt=\"15px\">\n                            <Box maxW=\"450px\" textAlign=\"center\" color=\"#CCC\">\n                                <Text>{project.frontmatter.category}</Text>\n                            </Box>\n                        </Flex>\n\n                        <Flex\n                            m=\"10px 0\"\n                            flexDir=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            pos=\"relative\"\n                        >\n                            <List\n                                display=\"flex\"\n                                flexWrap=\"wrap\"\n                                justifyContent=\"center/\"\n                            >\n                                {project.frontmatter.tags.map((tag, index) => (\n                                    <ListItem\n                                        key={index}\n                                        p=\"10px 15px \"\n                                        m=\"3px 7px\"\n                                        borderRadius=\"7px\"\n                                        backgroundColor={`#333`}\n                                        color=\"white\"\n                                        fontWeight=\"bolder\"\n                                    >\n                                        {console.log(tag)}\n                                        {tag}\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </Flex>\n                    </Flex>\n                </Flex>\n\n                <Flex flexDir={[\"column\"]}>\n                    <section title=\"Cabeçalho \">\n                        <Flex justifyContent=\"center\">\n                            {project.frontmatter.illustration && (\n                                <Image\n                                    alt={\n                                        \"Illustração do project \" +\n                                        project.frontmatter.name\n                                    }\n                                    src={project.frontmatter.illustration}\n                                    maxH=\"500px\"\n                                />\n                            )}\n                        </Flex>\n\n                        <Flex\n                            justifyContent=\"center\"\n                            wrap=\"wrap\"\n                            alignItems=\"baseline\"\n                        ></Flex>\n                    </section>\n\n                    {/* Descrição Completa */}\n                    <Flex\n                        m=\"10px 0\"\n                        flexDir=\"column\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        pos=\"relative\"\n                    >\n                        <Box\n                            color={useColorModeValue(\n                                theme.colors.fontColor,\n                                \"#ddd\"\n                            )}\n                            p=\"20px\"\n                            // bgColor={theme.colors.secondary}\n                            borderRadius=\"lg\"\n                            maxWidth=\"1000px\"\n                            className=\"post-content-full\"\n                            dangerouslySetInnerHTML={{ __html: project.html }}\n                        />\n                    </Flex>\n                </Flex>\n            </Box>\n        </Layout>\n    );\n};\n\nexport default ProjectTemplate;\n\nexport const pageQuery = graphql`\n    query Project($id: String!) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            html\n            frontmatter {\n                layout\n                description\n                short_description\n                icon\n                name\n                title\n                cover\n                link\n                category\n                tags\n                illustration\n                theme_color_primary\n                theme_color_secondary\n                theme_color_fontcolor\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","spacing","props","rest","separatorStyles","mx","separator","ref","role","__css","BreadcrumbSeparator","displayName","isCurrentPage","as","className","styles","sharedProps","cx","link","BreadcrumbLink","isLastChild","children","clones","map","child","type","itemStyles","display","alignItems","item","_className","BreadcrumbItem","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","index","container","value","Breadcrumb","ProjectTemplate","project","markdownRemark","theme","colors","primary","theme_color_primary","secondary","theme_color_secondary","fontColor","theme_color_fontcolor","frontmatter","name","short_description","Link","icon","console","illustration","useColorModeValue","borderRadius","maxWidth","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}