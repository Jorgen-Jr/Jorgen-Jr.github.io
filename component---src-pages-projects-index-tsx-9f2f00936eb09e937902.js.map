{"version":3,"file":"component---src-pages-projects-index-tsx-9f2f00936eb09e937902.js","mappings":"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","sources":["webpack://jorge.room/./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js","webpack://jorge.room/./src/components/Projects/ProjectCard.tsx","webpack://jorge.room/./src/components/Projects/index.tsx","webpack://jorge.room/./src/pages/projects/index.tsx"],"sourcesContent":["import { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { __DEV__, cx } from '@chakra-ui/utils';\nimport { getValidChildren } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"spacing\"],\n  _excluded2 = [\"isCurrentPage\", \"as\", \"className\", \"href\"],\n  _excluded3 = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"],\n  _excluded4 = [\"children\", \"spacing\", \"separator\", \"className\"];\n\n/**\n * React component that separates each breadcrumb link\n */\nvar BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var styles = useStyles();\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\nvar BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    as = props.as,\n    className = props.className,\n    href = props.href,\n    rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  var styles = useStyles();\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    separator = props.separator,\n    isLastChild = props.isLastChild,\n    spacing = props.spacing,\n    children = props.children,\n    className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, _excluded3);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  var styles = useStyles();\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n  var children = ownProps.children,\n    _ownProps$spacing = ownProps.spacing,\n    spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n    _ownProps$separator = ownProps.separator,\n    separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n    className = ownProps.className,\n    rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n  var _className = cx(\"chakra-breadcrumb\", className);\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator };","import React from \"react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Flex,\n    Heading,\n    Image,\n    Stack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { Link } from \"gatsby\";\n\nimport { Project } from \"../../types\";\n\nimport { motion } from \"framer-motion\";\n\nconst MotionStack = motion.custom(Stack);\n\ninterface ProjectCardProps {\n    project: Project;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n    project: project,\n}) => {\n    return (\n        <Link\n            to={project.slug || null}\n            style={{\n                textDecoration: \"none\",\n                margin: \"15px\",\n            }}\n        >\n            <MotionStack\n                borderRadius=\"md\"\n                w={[\"auto\", \"auto\", \"300px\"]}\n                h=\"100%\"\n                overflow=\"hidden\"\n                position=\"relative\"\n                textAlign=\"center\"\n                cursor=\"pointer\"\n                shadow=\"md\"\n                background={useColorModeValue(\"white\", \"#102435\")}\n                whileHover={{\n                    scale: 1.5,\n                    zIndex: 1,\n                    transition: { duration: 0.4, type: \"spring\", bounce: 0.5 },\n                }}\n            >\n                <Flex\n                    flexDir=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    margin=\"auto\"\n                >\n                    {project.icon ? (\n                        <Image\n                            src={project.icon}\n                            alt={project.name}\n                            boxSize=\"150px\"\n                            minH=\"53px\"\n                            maxH=\"150px\"\n                            height=\"auto\"\n                            width=\"auto\"\n                            p=\"5px\"\n                        />\n                    ) : (\n                        <Flex\n                            flexGrow={1}\n                            minH=\"80px\"\n                            justifyContent=\"center\"\n                            alignContent=\"center\"\n                            flexDir=\"column\"\n                        >\n                            <Heading\n                                fontFamily=\"FiraCode\"\n                                fontWeight=\"bolder\"\n                                fontSize=\"24px\"\n                            >\n                                {project.name}\n                            </Heading>\n                        </Flex>\n                    )}\n                    <Box p=\"10px\">\n                        <Flex\n                            flexGrow={1}\n                            justifyContent=\"space-between\"\n                            flexDir=\"column\"\n                        >\n                            <Text mt=\"10px\" p=\"10px\" pb=\"25px\" zIndex={0}>\n                                {project.short_description}\n                            </Text>\n                            <Flex justifyContent=\"center\" alignItems=\"center\">\n                                Clique Para Saber Mais\n                                <Box>\n                                    <ChevronRightIcon boxSize=\"32px\" />\n                                </Box>\n                            </Flex>\n                        </Flex>\n                    </Box>\n                </Flex>\n            </MotionStack>\n        </Link>\n    );\n};\n","import { Box, Flex, Heading, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport { Project } from \"../../types\";\nimport { SunIcon } from \"@chakra-ui/icons\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface ServicosProps {\n    projects?: Project[];\n}\n\nexport const ProjectsFeed: React.FC<ServicosProps> = () => {\n    const { allMarkdownRemark } = useStaticQuery(graphql`\n        {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n            allMarkdownRemark(\n                filter: {\n                    frontmatter: {\n                        layout: { eq: \"project\" }\n                        active: { eq: true }\n                    }\n                }\n                sort: { fields: frontmatter___date, order: ASC }\n            ) {\n                nodes {\n                    id\n                    html\n                    frontmatter {\n                        layout\n                        description\n                        short_description\n                        icon\n                        name\n                        title\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    `);\n\n    const projects: Project[] = allMarkdownRemark.nodes.map((item) => {\n        let project: Project = {\n            icon: item.frontmatter.icon,\n            name: item.frontmatter.name,\n            description: item.frontmatter.description,\n            short_description: item.frontmatter.short_description,\n            slug: item.fields.slug,\n            category: item.frontmatter.category,\n            tags: item.frontmatter.tags,\n        };\n        return project;\n    });\n\n    return (\n        <>\n            {projects.length > 0 && (\n                <Flex\n                    minH=\"60vh\"\n                    alignItems={[\"center\"]}\n                    flexDirection={[\"column\"]}\n                >\n                    <Flex justifyContent=\"center\">\n                        <SunIcon boxSize=\"42px\" color=\"#666\" />\n                    </Flex>\n\n                    <Flex\n                        justifyContent=\"center\"\n                        textTransform=\"uppercase\"\n                        m=\"15px\"\n                        textAlign=\"center\"\n                    >\n                        <Box>\n                            <Heading fontWeight=\"light\" size=\"lg\">\n                                <Text as=\"span\">Conheça os</Text>\n                                <Text as=\"span\" fontWeight=\"bold\">\n                                    {\" \"}\n                                    Projetos\n                                </Text>\n                            </Heading>\n                        </Box>\n                    </Flex>\n\n                    <Flex justifyContent=\"center\">\n                        <Box\n                            maxW=\"450px\"\n                            textAlign=\"center\"\n                            colo\n                            color={useColorModeValue(\"#666\", \"#CCC\")}\n                            m={[\"15px\", \"0\"]}\n                        >\n                            <Text>\n                                Conheça meus projetos, que participei e\n                                desenvolvi\n                            </Text>\n                        </Box>\n                    </Flex>\n\n                    <Flex\n                        mt=\"30px\"\n                        justifyContent=\"center\"\n                        alignSelf=\"center\"\n                        flexWrap=\"wrap\"\n                        transition=\"0.2s\"\n                        maxW={[\"100%\", \"1450px\"]}\n                    >\n                        {projects.map((project, index) => (\n                            <ProjectCard\n                                key={\"servico\" + index}\n                                project={project}\n                            />\n                        ))}\n                    </Flex>\n                </Flex>\n            )}\n        </>\n    );\n};\n\nexport default ProjectsFeed;\n","import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Box, Breadcrumb, BreadcrumbItem, Flex } from \"@chakra-ui/react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Layout from \"../../components/Layout\";\nimport SEO from \"../../components/Seo\";\nimport Projects from \"../../components/Projects\";\nimport { Project } from \"../../types\";\n\nfunction ProjectsFeed() {\n    const { allMarkdownRemark } = useStaticQuery(\n        graphql`\n            {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n                allMarkdownRemark(\n                    filter: {\n                        frontmatter: {\n                            layout: { eq: \"project\" }\n                            active: { eq: true }\n                        }\n                    }\n                    sort: { fields: frontmatter___date, order: ASC }\n                ) {\n                    nodes {\n                        id\n                        html\n                        frontmatter {\n                            layout\n                            description\n                            short_description\n                            icon\n                            link\n                            name\n                            title\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const projects: Project[] = allMarkdownRemark.nodes.map((item) => {\n        let project: Project = {\n            icon: item.frontmatter.icon,\n            name: item.frontmatter.name,\n            description: item.frontmatter.description,\n            short_description: item.frontmatter.short_description,\n            category: item.frontmatter.category,\n            slug: item.slug,\n        };\n        return project;\n    });\n\n    return (\n        <Layout slide={{ index: 4, name: \"projetos\" }}>\n            <SEO\n                title={\"Projetos - Jorge.room\"}\n                description={\"Jorge - Conheça os projetos.\"}\n                lang=\"pt-BR\"\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0 30px\", \"0 100px\"]}\n            >\n                {/* Breadcrumb e cabeçalho */}\n                <Flex flexDir=\"column\" mb=\"35px\">\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem isCurrentPage>\n                                <Link to=\"/#\">Projetos</Link>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n                </Flex>\n                <Projects projects={projects} />\n            </Box>\n        </Layout>\n    );\n}\n\nexport default ProjectsFeed;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","_excluded3","_excluded4","BreadcrumbSeparator","props","ref","spacing","rest","separatorStyles","mx","separator","span","role","__css","displayName","BreadcrumbLink","isCurrentPage","as","className","href","styles","sharedProps","cx","link","a","BreadcrumbItem","isLastChild","children","clones","map","child","type","itemStyles","display","alignItems","item","_className","li","Breadcrumb","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","index","nav","container","value","ol","MotionStack","motion","custom","Stack","ProjectCard","_ref","project","React","Link","to","slug","style","textDecoration","margin","borderRadius","w","h","overflow","position","textAlign","cursor","shadow","background","useColorModeValue","whileHover","scale","zIndex","transition","duration","bounce","Flex","flexDir","justifyContent","icon","Image","src","alt","name","boxSize","minH","maxH","height","width","p","flexGrow","alignContent","Heading","fontFamily","fontWeight","fontSize","Box","Text","mt","pb","short_description","ChevronRightIcon","ProjectsFeed","allMarkdownRemark","useStaticQuery","projects","nodes","frontmatter","description","fields","category","tags","flexDirection","SunIcon","color","textTransform","m","size","maxW","colo","alignSelf","flexWrap","Layout","slide","SEO","title","lang","mb","Projects"],"sourceRoot":""}