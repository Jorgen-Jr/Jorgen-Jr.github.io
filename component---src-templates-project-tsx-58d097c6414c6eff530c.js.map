{"version":3,"file":"component---src-templates-project-tsx-58d097c6414c6eff530c.js","mappings":"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","sources":["webpack://jorge.room/./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js","webpack://jorge.room/./src/templates/project.tsx"],"sourcesContent":["import { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { __DEV__, cx } from '@chakra-ui/utils';\nimport { getValidChildren } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"spacing\"],\n  _excluded2 = [\"isCurrentPage\", \"as\", \"className\", \"href\"],\n  _excluded3 = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"],\n  _excluded4 = [\"children\", \"spacing\", \"separator\", \"className\"];\n\n/**\n * React component that separates each breadcrumb link\n */\nvar BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var styles = useStyles();\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\nvar BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    as = props.as,\n    className = props.className,\n    href = props.href,\n    rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  var styles = useStyles();\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    separator = props.separator,\n    isLastChild = props.isLastChild,\n    spacing = props.spacing,\n    children = props.children,\n    className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, _excluded3);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  var styles = useStyles();\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n  var children = ownProps.children,\n    _ownProps$spacing = ownProps.spacing,\n    spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n    _ownProps$separator = ownProps.separator,\n    separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n    className = ownProps.className,\n    rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n  var _className = cx(\"chakra-breadcrumb\", className);\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator };","import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Breadcrumb,\n    BreadcrumbItem,\n    BreadcrumbLink,\n    Flex,\n    Heading,\n    Image,\n    List,\n    ListItem,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\n\nimport \"./markdown.css\";\n\nconst ProjectTemplate = ({ data }) => {\n    const project = data.markdownRemark;\n\n    const theme = {\n        colors: {\n            primary: project.frontmatter.theme_color_primary || \"#db98b5\",\n            secondary: project.frontmatter.theme_color_secondary || \"#36557b\",\n            fontColor: project.frontmatter.theme_color_fontcolor || \"#053a63\",\n        },\n    };\n\n    return (\n        <Layout slide={{ index: -1, name: \"projeto\" }}>\n            <SEO\n                title={project.frontmatter.name}\n                description={\n                    \"Jorge's Room - \" + project.frontmatter.short_description\n                }\n                image={project.frontmatter.illustration}\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0 30px\", \"0 100px\"]}\n            >\n                <Flex flexDir=\"column\" mb=\"35px\">\n                    {/* Breadcrumb e cabeçalho */}\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem>\n                                <Link to=\"/#projetos\">Projetos</Link>\n                            </BreadcrumbItem>\n\n                            <BreadcrumbItem isCurrentPage>\n                                <BreadcrumbLink href=\"#\">\n                                    {project.frontmatter.name}\n                                </BreadcrumbLink>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n\n                    <Flex\n                        flexDir=\"column\"\n                        position=\"relative\"\n                        w=\"100%\"\n                        height=\"auto\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        p=\"30px\"\n                        color=\"#EEE\"\n                    >\n                        <Box\n                            backgroundColor=\"#000\"\n                            backgroundImage=\"linear-gradient( 112.1deg,  rgba(32,38,57,1) 11.4%, rgba(63,76,119,1) 70.2% )\"\n                            position=\"absolute\"\n                            h=\"100%\"\n                            w=\"200%\"\n                            left={-100}\n                            bottom={0}\n                            zIndex={-1}\n                            opacity={0.9}\n                            overflow=\"hidden\"\n                        >\n                            {project.frontmatter.cover ? (\n                                <>\n                                    <Box\n                                        position=\"absolute\"\n                                        background=\"linear-gradient( 112.1deg,  rgba(32,38,57,0.6) 11.4%, rgba(63,76,119,0.6) 70.2% )\"\n                                        w=\"100%\"\n                                        h=\"100%\"\n                                        top={0}\n                                        left={0}\n                                    ></Box>\n                                    <Image\n                                        src={project.frontmatter.cover}\n                                        alt={\n                                            \"Capa do project \" +\n                                            project.frontmatter.name\n                                        }\n                                        objectFit=\"cover\"\n                                        boxSize=\"100%\"\n                                    />\n                                </>\n                            ) : (\n                                <Box\n                                    boxSize=\"100%\"\n                                    bgColor={\n                                        project.frontmatter.theme_color_primary\n                                    }\n                                >\n                                    {\" \"}\n                                </Box>\n                            )}\n                        </Box>\n                        <Flex justifyContent=\"center\">\n                            {project.frontmatter.icon ? (\n                                <Image\n                                    alt={project.frontmatter.name}\n                                    src={project.frontmatter.icon}\n                                    maxH=\"90px\"\n                                    objectFit=\"contain\"\n                                />\n                            ) : (\n                                <Flex\n                                    flexGrow={1}\n                                    minH=\"80px\"\n                                    justifyContent=\"center\"\n                                    alignContent=\"center\"\n                                    flexDir=\"column\"\n                                >\n                                    <Heading\n                                        fontFamily=\"FiraCode\"\n                                        fontWeight=\"bolder\"\n                                        fontSize=\"32px\"\n                                    >\n                                        {project.frontmatter.name}\n                                    </Heading>\n                                </Flex>\n                            )}\n                        </Flex>\n\n                        <Flex justifyContent=\"center\" mt=\"15px\">\n                            <Box maxW=\"450px\" textAlign=\"center\" color=\"#CCC\">\n                                <Text>{project.frontmatter.category}</Text>\n                            </Box>\n                        </Flex>\n\n                        <Flex\n                            m=\"10px 0\"\n                            flexDir=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            pos=\"relative\"\n                        >\n                            <List\n                                display=\"flex\"\n                                flexWrap=\"wrap\"\n                                justifyContent=\"center/\"\n                            >\n                                {project.frontmatter.tags.map((tag, index) => (\n                                    <ListItem\n                                        key={index}\n                                        p=\"10px 15px \"\n                                        m=\"3px 7px\"\n                                        borderRadius=\"7px\"\n                                        backgroundColor={`#333`}\n                                        color=\"white\"\n                                        fontWeight=\"bolder\"\n                                    >\n                                        {tag}\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </Flex>\n                    </Flex>\n                </Flex>\n\n                <Flex flexDir={[\"column\"]}>\n                    <section title=\"Cabeçalho \">\n                        <Flex justifyContent=\"center\">\n                            {project.frontmatter.illustration && (\n                                <Image\n                                    alt={\n                                        \"Illustração do project \" +\n                                        project.frontmatter.name\n                                    }\n                                    src={project.frontmatter.illustration}\n                                    maxH=\"500px\"\n                                />\n                            )}\n                        </Flex>\n\n                        <Flex\n                            justifyContent=\"center\"\n                            wrap=\"wrap\"\n                            alignItems=\"baseline\"\n                        ></Flex>\n                    </section>\n\n                    {/* Descrição Completa */}\n                    <Flex\n                        m=\"10px 0\"\n                        flexDir=\"column\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        pos=\"relative\"\n                    >\n                        <Box\n                            color={useColorModeValue(\n                                theme.colors.fontColor,\n                                \"#ddd\"\n                            )}\n                            p=\"20px\"\n                            // bgColor={theme.colors.secondary}\n                            borderRadius=\"lg\"\n                            maxWidth=\"1000px\"\n                            className=\"post-content-full\"\n                            dangerouslySetInnerHTML={{ __html: project.html }}\n                        />\n                    </Flex>\n                </Flex>\n            </Box>\n        </Layout>\n    );\n};\n\nexport default ProjectTemplate;\n\nexport const pageQuery = graphql`\n    query Project($id: String!) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            html\n            frontmatter {\n                layout\n                description\n                short_description\n                icon\n                name\n                title\n                cover\n                link\n                category\n                tags\n                illustration\n                theme_color_primary\n                theme_color_secondary\n                theme_color_fontcolor\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","_excluded3","_excluded4","BreadcrumbSeparator","props","ref","spacing","rest","separatorStyles","mx","separator","span","role","__css","displayName","BreadcrumbLink","isCurrentPage","as","className","href","styles","sharedProps","cx","link","a","BreadcrumbItem","isLastChild","children","clones","map","child","type","itemStyles","display","alignItems","item","_className","li","Breadcrumb","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","index","nav","container","value","ol","_ref","data","project","markdownRemark","theme","colors","primary","frontmatter","theme_color_primary","secondary","theme_color_secondary","fontColor","theme_color_fontcolor","React","Layout","slide","name","SEO","title","description","short_description","image","illustration","Box","mt","mb","p","Flex","flexDir","h","ChevronRightIcon","color","fontWeight","fontSize","Link","to","position","w","height","justifyContent","backgroundColor","backgroundImage","left","bottom","zIndex","opacity","overflow","cover","background","top","Image","src","alt","objectFit","boxSize","bgColor","icon","maxH","flexGrow","minH","alignContent","Heading","fontFamily","maxW","textAlign","Text","category","m","pos","List","flexWrap","tags","tag","ListItem","borderRadius","wrap","useColorModeValue","maxWidth","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}