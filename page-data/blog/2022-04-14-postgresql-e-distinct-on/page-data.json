{
    "componentChunkName": "component---src-templates-post-tsx",
    "path": "/blog/2022-04-14-postgresql-e-distinct-on/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Jorge.Room"}},"markdownRemark":{"id":"287ef725-1a36-5794-afde-0c05734fa322","html":"<p>Vamos dar uma olhada na cláusula <code class=\"language-text\">distinct on</code> do postgreSQL, e um de seus casos de uso, <code class=\"language-text\">distinct on</code> é usado juntamente com o <code class=\"language-text\">select</code> para remover duplicatas de uma consulta da mesma forma que um <code class=\"language-text\">distinct</code> comum, com a única diferença de que ele mantém a <code class=\"language-text\">primeira linha</code> de cada linha de duplicatas no resultado.</p>\n<h1 id=\"posgresql-distinct-on\" style=\"position:relative;\"><a href=\"#posgresql-distinct-on\" aria-label=\"posgresql distinct on permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://www.postgresql.org/docs/current/sql-select.html#SQL-DISTINCT\">PosgreSQL DISTINCT ON</a></h1>\n<p>Se <strong>SELECT DISTINCT</strong> estiver especificado, todas as linhas duplicatas serão removidas do resultado (uma linha é mantida de cada grupo de duplicatas). <strong>SELECT ALL</strong> especifica o oposto, todas as linhas do resultado são mantidas; este é o padrão.</p>\n<p><strong>SELECT DISTINCT ON</strong> ( expression [, …] ) mantém apenas a primeira linha de cada conjunto de linhas cujo a expressão seja avaliada como igual. A expressão <strong>DISTINCT ON</strong> são interpretadas pela mesmas regras do <strong><a href=\"https://www.postgresql.org/docs/current/sql-select.html#SQL-ORDERBY\">ORDER BY</a></strong>. Note que a “primeira linha” de cada conjunto é imprevisível a menos que o <strong>ORDER BY</strong> seja usado para garantir que a linha desejada apareça primeiro.</p>\n<p>Vamos considerar a seguinte tabela para armazenar dados de musicas:</p>\n<deckgo-highlight-code language=\"sql\"  >\n          <code slot=\"code\"> CREATE TABLE song(\n    id serial NOT NULL PRIMARY KEY,\n    name VARCHAR,\n    singer VARCHAR,\n    launch_date DATE\n);</code>\n        </deckgo-highlight-code>\n<p>E os seguintes dados:</p>\n<deckgo-highlight-code language=\"sql\"  >\n          <code slot=\"code\">INSERT INTO song(name, singer, launch_date)\nVALUES\n    (&#39;Forever Young&#39;, &#39;Alphaville&#39;, &#39;1984-08-08&#39;),\n    (&#39;Big in Japan&#39;, &#39;Alphaville&#39;, &#39;1984-01-20&#39;),\n    (&#39;Sounds Like a Melody&#39;, null, &#39;1983-10-15&#39;),\n    (&#39;Romeos&#39;, &#39;Alphaville&#39;, &#39;1989-03-01&#39;),\n    (null, &#39;Alphaville&#39;, &#39;1994-10-05&#39;),\n    (&#39;Red is The New Black&#39;, null, &#39;2001-05-05&#39;),\n    (&#39;In da Club&#39;, &#39;50 Cent&#39;, &#39;2002-02-21&#39;),\n    (&#39;Candy Shop&#39;, &#39;50 Cent&#39;, &#39;2005-02-15&#39;),\n    (&#39;I Started a Joke&#39;, &#39;Bee Gees&#39;, &#39;1968-03-23&#39;),\n    (&#39;My Universe&#39;, &#39;Coldplay&#39;, &#39;2021-10-27&#39;),\n    (&#39;Holiday&#39;, &#39;Bee Gees&#39;, &#39;1967-05-15&#39;),\n    (&#39;Paradise&#39;, &#39;Coldplay&#39;, &#39;2011-09-12&#39;),\n    (&#39;The Scientist&#39;, &#39;Coldplay&#39;, &#39;2002-08-26&#39;);</code>\n        </deckgo-highlight-code>\n<p>Agora, se quisermos retornar todas as músicas mais atuais de um cantor sem repetições,e podemos usar a seguinte consulta:</p>\n<deckgo-highlight-code language=\"sql\"  >\n          <code slot=\"code\"> SELECT DISTINCT ON (singer) singer, name, launch_date\n   FROM song\n   ORDER BY singer, launch_date DESC;</code>\n        </deckgo-highlight-code>\n<p>Retornando os seguintes dados</p>\n<p><img src=\"/images/uploads/screenshot-from-2022-04-13-23-49-20.png\" alt=\"Resultado Distinct On\" title=\"Resultado Distinct On\"></p>\n<p>Retorna a musica mais recente para cada cantor. Mas se não usarmos o <strong>ORDER BY</strong> para forçar a ordem dos valores de tempo para cada localização teriamos obtido um valor imprevisível para cada cantor.</p>\n<p>As expressões <strong>DISTINCT ON</strong> precisam se equiparar com a expressão <strong>ORDER BY</strong> que estiver mais a esquerda (a primeira coluna a ser ordenada). A cláusula <strong>ORDER BY</strong> normalmente conterá expressões adicionais para determinar o precedente desejado de linhas em cada conjunto definido pelo <strong>DISTINCT ON</strong>.</p>\n<p>Atualmente, <strong>FOR NO KEY UPDATE, FOR UPDATE, FOR SHARE</strong> e <strong>FOR KEY SHARE</strong> não podem ser especificados com <strong>DISTINCT</strong>.</p>\n<p>Fontes:</p>\n<ul>\n<li><a href=\"https://www.geeksforgeeks.org/postgresql-distinct-on-expression/\">GeeksForGeeks</a></li>\n<li><a href=\"https://www.postgresql.org/docs/current/sql-select.html#SQL-DISTINCT\">PostgreSQL Docs</a></li>\n</ul>","excerpt":"Vamos dar uma olhada na cláusula  do postgreSQL, e um de seus casos de uso,  é usado juntamente com o  para remover duplicatas de uma consulta da mesma forma que um  comum, com a única diferença de que ele mantém a  de cada linha de duplicatas no…","frontmatter":{"cover":"/images/uploads/searching.jpg","date":"14/04/2022 03:02","isBanner":false,"layout":"post","special":false,"title":"PostgreSQL e Distinct On"},"fields":{"slug":"/blog/2022-04-14-postgresql-e-distinct-on/"}},"count":{"totalCount":12},"previous":{"fields":{"slug":"/blog/2021-12-15-recursos-grátis-para-desenvolvimento-web/"},"frontmatter":{"title":"Recursos Grátis para Desenvolvimento Web"}},"next":null},"pageContext":{"id":"287ef725-1a36-5794-afde-0c05734fa322","date":"2022-04-14","previousPostId":"669957bf-1134-576c-9e00-88eaaa4a568e","nextPostId":null}},
    "staticQueryHashes": ["712016698"]}