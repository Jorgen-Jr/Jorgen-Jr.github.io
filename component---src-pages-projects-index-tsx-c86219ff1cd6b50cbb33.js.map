{"version":3,"file":"component---src-pages-projects-index-tsx-c86219ff1cd6b50cbb33.js","mappings":"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","sources":["webpack://jorge.room/./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js","webpack://jorge.room/./src/components/Projects/ProjectCard.tsx","webpack://jorge.room/./src/components/Projects/index.tsx","webpack://jorge.room/./src/pages/projects/index.tsx"],"sourcesContent":["import { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { __DEV__, cx } from '@chakra-ui/utils';\nimport { getValidChildren } from '@chakra-ui/react-utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"spacing\"],\n    _excluded2 = [\"isCurrentPage\", \"as\", \"className\", \"href\"],\n    _excluded3 = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"],\n    _excluded4 = [\"children\", \"spacing\", \"separator\", \"className\"];\n/**\n * React component that separates each breadcrumb link\n */\n\nvar BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\n\nvar BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      as = props.as,\n      className = props.className,\n      href = props.href,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nvar BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      separator = props.separator,\n      isLastChild = props.isLastChild,\n      spacing = props.spacing,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, _excluded3);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  var styles = useStyles();\n\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\n\n\nvar Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var children = ownProps.children,\n      _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      _ownProps$separator = ownProps.separator,\n      separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n      className = ownProps.className,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\n\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator };","import React from \"react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Flex,\n    Heading,\n    Image,\n    Stack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { Link } from \"gatsby\";\n\nimport { Project } from \"../../types\";\n\nimport { motion } from \"framer-motion\";\n\nconst MotionStack = motion.custom(Stack);\n\ninterface ProjectCardProps {\n    project: Project;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n    project: project,\n}) => {\n    return (\n        <Link\n            to={project.slug || null}\n            style={{\n                textDecoration: \"none\",\n                margin: \"15px\",\n            }}\n        >\n            <MotionStack\n                borderRadius=\"md\"\n                w={[\"auto\", \"auto\", \"300px\"]}\n                h=\"100%\"\n                overflow=\"hidden\"\n                position=\"relative\"\n                textAlign=\"center\"\n                cursor=\"pointer\"\n                shadow=\"md\"\n                background={useColorModeValue(\"white\", \"#102435\")}\n                whileHover={{\n                    scale: 1.5,\n                    zIndex: 1,\n                    transition: { duration: 0.4, type: \"spring\", bounce: 0.5 },\n                }}\n            >\n                <Flex\n                    flexDir=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    margin=\"auto\"\n                >\n                    {project.icon ? (\n                        <Image\n                            src={project.icon}\n                            alt={project.name}\n                            boxSize=\"150px\"\n                            minH=\"53px\"\n                            maxH=\"150px\"\n                            height=\"auto\"\n                            width=\"auto\"\n                            p=\"5px\"\n                        />\n                    ) : (\n                        <Flex\n                            flexGrow={1}\n                            minH=\"80px\"\n                            justifyContent=\"center\"\n                            alignContent=\"center\"\n                            flexDir=\"column\"\n                        >\n                            <Heading\n                                fontFamily=\"FiraCode\"\n                                fontWeight=\"bolder\"\n                                fontSize=\"24px\"\n                            >\n                                {project.name}\n                            </Heading>\n                        </Flex>\n                    )}\n                    <Box p=\"10px\">\n                        <Flex\n                            flexGrow={1}\n                            justifyContent=\"space-between\"\n                            flexDir=\"column\"\n                        >\n                            <Text mt=\"10px\" p=\"10px\" pb=\"25px\" zIndex={0}>\n                                {project.short_description}\n                            </Text>\n                            <Flex justifyContent=\"center\" alignItems=\"center\">\n                                Clique Para Saber Mais\n                                <Box>\n                                    <ChevronRightIcon boxSize=\"32px\" />\n                                </Box>\n                            </Flex>\n                        </Flex>\n                    </Box>\n                </Flex>\n            </MotionStack>\n        </Link>\n    );\n};\n","import { Box, Flex, Heading, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport { Project } from \"../../types\";\nimport { SunIcon } from \"@chakra-ui/icons\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface ServicosProps {\n    projects?: Project[];\n}\n\nexport const ProjectsFeed: React.FC<ServicosProps> = () => {\n    const { allMarkdownRemark } = useStaticQuery(graphql`\n        {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n            allMarkdownRemark(\n                filter: {\n                    frontmatter: {\n                        layout: { eq: \"project\" }\n                        active: { eq: true }\n                    }\n                }\n                sort: { fields: frontmatter___date, order: ASC }\n            ) {\n                nodes {\n                    id\n                    html\n                    frontmatter {\n                        layout\n                        description\n                        short_description\n                        icon\n                        name\n                        title\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    `);\n\n    const projects: Project[] = allMarkdownRemark.nodes.map((item) => {\n        let project: Project = {\n            icon: item.frontmatter.icon,\n            name: item.frontmatter.name,\n            description: item.frontmatter.description,\n            short_description: item.frontmatter.short_description,\n            slug: item.fields.slug,\n            category: item.frontmatter.category,\n            tags: item.frontmatter.tags,\n        };\n        return project;\n    });\n\n    return (\n        <>\n            {projects.length > 0 && (\n                <Flex\n                    minH=\"60vh\"\n                    alignItems={[\"center\"]}\n                    flexDirection={[\"column\"]}\n                >\n                    <Flex justifyContent=\"center\">\n                        <SunIcon boxSize=\"42px\" color=\"#666\" />\n                    </Flex>\n\n                    <Flex\n                        justifyContent=\"center\"\n                        textTransform=\"uppercase\"\n                        m=\"15px\"\n                        textAlign=\"center\"\n                    >\n                        <Box>\n                            <Heading fontWeight=\"light\" size=\"lg\">\n                                <Text as=\"span\">Conheça os</Text>\n                                <Text as=\"span\" fontWeight=\"bold\">\n                                    {\" \"}\n                                    Projetos\n                                </Text>\n                            </Heading>\n                        </Box>\n                    </Flex>\n\n                    <Flex justifyContent=\"center\">\n                        <Box\n                            maxW=\"450px\"\n                            textAlign=\"center\"\n                            colo\n                            color={useColorModeValue(\"#666\", \"#CCC\")}\n                            m={[\"15px\", \"0\"]}\n                        >\n                            <Text>\n                                Conheça meus projetos, que participei e\n                                desenvolvi\n                            </Text>\n                        </Box>\n                    </Flex>\n\n                    <Flex\n                        mt=\"30px\"\n                        justifyContent=\"center\"\n                        alignSelf=\"center\"\n                        flexWrap=\"wrap\"\n                        transition=\"0.2s\"\n                        maxW={[\"100%\", \"1450px\"]}\n                    >\n                        {projects.map((project, index) => (\n                            <ProjectCard\n                                key={\"servico\" + index}\n                                project={project}\n                            />\n                        ))}\n                    </Flex>\n                </Flex>\n            )}\n        </>\n    );\n};\n\nexport default ProjectsFeed;\n","import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Box, Breadcrumb, BreadcrumbItem, Flex } from \"@chakra-ui/react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Layout from \"../../components/Layout\";\nimport SEO from \"../../components/Seo\";\nimport Projects from \"../../components/Projects\";\nimport { Project } from \"../../types\";\n\nfunction ProjectsFeed() {\n    const { allMarkdownRemark } = useStaticQuery(\n        graphql`\n            {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n                allMarkdownRemark(\n                    filter: {\n                        frontmatter: {\n                            layout: { eq: \"project\" }\n                            active: { eq: true }\n                        }\n                    }\n                    sort: { fields: frontmatter___date, order: ASC }\n                ) {\n                    nodes {\n                        id\n                        html\n                        frontmatter {\n                            layout\n                            description\n                            short_description\n                            icon\n                            link\n                            name\n                            title\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const projects: Project[] = allMarkdownRemark.nodes.map((item) => {\n        let project: Project = {\n            icon: item.frontmatter.icon,\n            name: item.frontmatter.name,\n            description: item.frontmatter.description,\n            short_description: item.frontmatter.short_description,\n            category: item.frontmatter.category,\n            slug: item.slug,\n        };\n        return project;\n    });\n\n    return (\n        <Layout slide={{ index: 4, name: \"projetos\" }}>\n            <SEO\n                title={\"Projetos - Jorge.room\"}\n                description={\"Jorge - Conheça os projetos.\"}\n                lang=\"pt-BR\"\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0 30px\", \"0 100px\"]}\n            >\n                {/* Breadcrumb e cabeçalho */}\n                <Flex flexDir=\"column\" mb=\"35px\">\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem isCurrentPage>\n                                <Link to=\"/#\">Projetos</Link>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n                </Flex>\n                <Projects projects={projects} />\n            </Box>\n        </Layout>\n    );\n}\n\nexport default ProjectsFeed;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","_excluded3","_excluded4","BreadcrumbSeparator","props","ref","spacing","rest","separatorStyles","mx","separator","role","__css","displayName","BreadcrumbLink","isCurrentPage","as","className","href","styles","sharedProps","cx","link","BreadcrumbItem","isLastChild","children","clones","map","child","type","itemStyles","display","alignItems","item","_className","Breadcrumb","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","index","container","value","MotionStack","motion","Stack","ProjectCard","project","Link","to","slug","style","textDecoration","margin","borderRadius","w","h","overflow","position","textAlign","cursor","shadow","background","useColorModeValue","whileHover","scale","zIndex","transition","duration","bounce","flexDir","justifyContent","icon","src","alt","name","boxSize","minH","maxH","height","width","p","flexGrow","alignContent","fontFamily","fontWeight","fontSize","mt","pb","short_description","projects","useStaticQuery","allMarkdownRemark","nodes","frontmatter","description","fields","category","tags","flexDirection","color","textTransform","m","size","maxW","colo","alignSelf","flexWrap","slide","title","lang","mb"],"sourceRoot":""}