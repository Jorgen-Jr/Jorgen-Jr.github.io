{"version":3,"sources":["webpack:///./src/pages/posts/PostCard.tsx","webpack:///./node_modules/@chakra-ui/icons/dist/esm/ChevronLeft.js","webpack:///./node_modules/@chakra-ui/breadcrumb/dist/esm/breadcrumb.js","webpack:///./src/templates/post-list.tsx","webpack:///./node_modules/@chakra-ui/layout/dist/esm/stack.utils.js","webpack:///./node_modules/@chakra-ui/layout/dist/esm/stack.js"],"names":["PostCard","post","fullWidth","special","borderRadius","w","m","overflow","background","isBanner","useColorModeValue","position","direction","justifyContent","shadow","to","slug","src","cover","alt","title","loading","style","margin","width","display","p","as","fontSize","color","fontWeight","category","toUpperCase","post_date","flexGrow","flexDir","mt","pb","zIndex","className","dangerouslySetInnerHTML","__html","content","ChevronLeftIcon","d","displayName","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","BreadcrumbSeparator","props","ref","spacing","rest","separatorStyles","mx","separator","span","role","__css","BreadcrumbLink","isCurrentPage","styles","sharedProps","a","link","BreadcrumbItem","isLastChild","children","clones","map","child","type","_className","li","alignItems","Breadcrumb","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","index","nav","value","ol","PostListTemplate","data","pageContext","currentPage","numPages","posts","allMarkdownRemark","edges","isFirst","isLast","prevPage","toString","nextPage","post_list","item","node","frontmatter","date","fields","excerpt","slide","description","lang","mb","ml","h","alignSelf","flexWrap","aviso","rel","boxSize","height","paddingTop","selector","div","flex","minWidth","Stack","isInline","directionProp","align","justify","_props$spacing","wrap","divider","shouldWrapChildren","options","directionStyles","column","row","mr","flexDirection","getStackStyles","dividerStyle","dividerStyles","my","borderLeftWidth","borderBottomWidth","getDividerStyles","hasDivider","shouldUseChildren","_child","_divider","HStack","VStack"],"mappings":"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","file":"component---src-templates-post-list-tsx-9789c789a03b4956f5f1.js","sourcesContent":["import {\n    Box,\n    Flex,\n    Heading,\n    Image,\n    Stack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Post } from \"../../types\";\n\ninterface PostCardProps {\n    post: Post;\n    fullWidth: Boolean;\n}\n\nexport const PostCard: React.FC<PostCardProps> = ({\n    post: post,\n    fullWidth,\n}) => {\n    const special = post?.special;\n\n    return (\n        <>\n            {post ? (\n                <Stack\n                    borderRadius=\"5px\"\n                    w={\n                        special\n                            ? \"100%\"\n                            : fullWidth\n                            ? \"100%\"\n                            : [\"100%\", \"100%\", \"100%\", \"29%\"]\n                    }\n                    m=\"20px\"\n                    overflow=\"hidden\"\n                    background={\n                        special && post.isBanner\n                            ? \"unset\"\n                            : useColorModeValue(\"white\", \"#102435\")\n                    }\n                    position=\"relative\"\n                    direction={\n                        fullWidth\n                            ? [\"column\", \"column\", \"row\", \"row\"]\n                            : \"column\"\n                    }\n                    justifyContent={special ? \"center\" : \"auto\"}\n                    shadow={special ? \"none\" : \"xl\"}\n                >\n                    <Link to={post.slug}>\n                        <Image\n                            src={post.cover}\n                            alt={post.title}\n                            loading={post.isBanner ? \"eager\" : \"lazy\"}\n                            style={{ margin: 0, width: \"100%\" }}\n                            borderRadius={special ? \"7px\" : \"unset\"}\n                            shadow={special ? \"md\" : \"none\"}\n                        />\n                    </Link>\n                    <Link to={post.slug}>\n                        <Box\n                            {...(post.isBanner\n                                ? {\n                                      display: \"none\",\n                                  }\n                                : null)}\n                            p=\"0 20px\"\n                        >\n                            <Text\n                                as=\"span\"\n                                fontSize=\"12px\"\n                                color={useColorModeValue(\"#666\", \"#CCC\")}\n                                fontWeight=\"bolder\"\n                            >\n                                {`${post.category.toUpperCase()}`}\n                            </Text>\n                            {\" • \"}\n                            <Text\n                                as=\"span\"\n                                fontSize=\"12px\"\n                                color={useColorModeValue(\"#666\", \"#CCC\")}\n                            >\n                                {`${post.post_date}`}\n                            </Text>\n                            <Heading fontSize=\"25px\">{post.title}</Heading>\n                            <Flex\n                                flexGrow={1}\n                                justifyContent=\"space-between\"\n                                flexDir=\"row\"\n                            >\n                                <Box\n                                    mt=\"10px\"\n                                    pb=\"25px\"\n                                    color={useColorModeValue(\"#666\", \"#CCC\")}\n                                    zIndex={0}\n                                >\n                                    <div\n                                        className=\"aviso-content-list\"\n                                        dangerouslySetInnerHTML={{\n                                            __html: post.content,\n                                        }}\n                                    />{\" \"}\n                                    <Text\n                                        style={{\n                                            color: useColorModeValue(\n                                                \"darkblue\",\n                                                \"lightblue\"\n                                            ),\n                                        }}\n                                    >\n                                        ler mais\n                                    </Text>\n                                </Box>\n                            </Flex>\n                        </Box>\n                    </Link>\n                </Stack>\n            ) : null}\n        </>\n    );\n};\n\nexport default PostCard;\n","import { createIcon } from \"@chakra-ui/icon\";\nexport var ChevronLeftIcon = createIcon({\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\",\n  displayName: \"ChevronLeftIcon\"\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component that separates each breadcrumb link\n */\n\nexport var BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n      rest = _objectWithoutPropertiesLoose(props, [\"spacing\"]);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\n\nexport var BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      as = props.as,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"as\", \"className\"]);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\"\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\n\n\nexport var BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      separator = props.separator,\n      isLastChild = props.isLastChild,\n      spacing = props.spacing,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: {\n      display: \"inline-flex\",\n      alignItems: \"center\"\n    }\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\n\n\nexport var Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var children = ownProps.children,\n      _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      _ownProps$separator = ownProps.separator,\n      separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n      className = ownProps.className,\n      rest = _objectWithoutPropertiesLoose(ownProps, [\"children\", \"spacing\", \"separator\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Breadcrumb,\n    BreadcrumbItem,\n    Flex,\n    HStack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport { PostCard } from \"../pages/posts/PostCard\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport { Post } from \"../types\";\n\nfunction PostListTemplate(props) {\n    const { data } = props;\n\n    const { currentPage, numPages } = props.pageContext;\n\n    const posts = data.allMarkdownRemark.edges;\n\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numPages;\n    const prevPage =\n        currentPage - 1 === 1\n            ? \"/blog/\"\n            : \"/blog/\" + (currentPage - 1).toString();\n    const nextPage = \"/blog/\" + (currentPage + 1).toString();\n\n    const post_list: Post[] = posts.map((item) => {\n        let post: Post = {\n            post_date: item.node.frontmatter.date,\n            slug: item.node.fields.slug,\n            title: item.node.frontmatter.title,\n            cover: item.node.frontmatter.cover,\n            content: item.node.excerpt,\n            isBanner: item.node.frontmatter.isBanner,\n            special: item.node.frontmatter.special,\n            category: item.node.frontmatter.category,\n        };\n        return post;\n    });\n\n    return (\n        <Layout slide={-1}>\n            <SEO\n                title={\"Blog\"}\n                description={\"Jorge's Room - Blog Posts.\"}\n                lang=\"pt-BR\"\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0\", \"0\", \"0\", \"0 100px\"]}\n            >\n                {/* Breadcrumb e cabeçalho */}\n                <Flex flexDir=\"column\" mb=\"35px\" ml=\"15px\">\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem isCurrentPage>\n                                <Link to=\"/blog\">Blog</Link>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n                </Flex>\n\n                <Flex\n                    p={[\"0\", \"0\", \"0\", \"0\", \"0\", \"0 100px\"]}\n                    justifyContent=\"space-between\"\n                    alignSelf=\"center\"\n                    flexWrap=\"wrap\"\n                >\n                    {post_list.map((aviso, index) => (\n                        <PostCard\n                            key={\"aviso\" + index}\n                            post={aviso}\n                            fullWidth={index === 0}\n                        />\n                    ))}\n                </Flex>\n            </Box>\n\n            {/* Navegar entre próximo post e anterior */}\n            <HStack w=\"100%\" justifyContent=\"space-evenly\" p=\"30px\">\n                {!isFirst ? (\n                    <Link to={prevPage} rel=\"Anterior\">\n                        <Flex alignItems=\"center\">\n                            <ChevronLeftIcon\n                                boxSize=\"30px\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                            />\n                            {\"  \"}\n                            <Text\n                                as=\"span\"\n                                height=\"30px\"\n                                fontWeight=\"bolder\"\n                                fontSize=\"1.1rem\"\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                                paddingTop=\"2px\"\n                            >\n                                Página Anterior\n                            </Text>\n                        </Flex>\n                    </Link>\n                ) : (\n                    <Box></Box>\n                )}\n\n                {!isLast ? (\n                    <Link to={nextPage} rel=\"Próximo\">\n                        <Flex alignItems=\"center\">\n                            <Text\n                                as=\"span\"\n                                height=\"30px\"\n                                fontWeight=\"bolder\"\n                                fontSize=\"1.1rem\"\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                                paddingTop=\"2px\"\n                            >\n                                Próxima Página\n                            </Text>\n                            {\"  \"}\n                            <ChevronRightIcon\n                                boxSize=\"30px\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                            />\n                        </Flex>\n                    </Link>\n                ) : (\n                    <Box></Box>\n                )}\n            </HStack>\n        </Layout>\n    );\n}\n\nexport default PostListTemplate;\n\nexport const pageQuery = graphql`\n    query PostFeed($skip: Int!, $limit: Int!) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n            filter: { frontmatter: { layout: { eq: \"post\" } } }\n        ) {\n            edges {\n                node {\n                    excerpt(format: PLAIN, pruneLength: 500)\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        cover\n                        date(fromNow: true, locale: \"pt-br\")\n                        isBanner\n                        layout\n                        special\n                        title\n                        category\n                    }\n                }\n            }\n        }\n    }\n`;\n","import _defineProperty from \"/home/jorge-n/Documents/workspace/portfolio/room/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { mapResponsive } from \"@chakra-ui/utils\";\n/**\n * If we ever run into SSR issues with this, check this post to find a fix for it:\n * @see https://medium.com/@emmenko/patching-lobotomized-owl-selector-for-emotion-ssr-5a582a3c424c\n */\n\nexport var selector = \"& > *:not(style) ~ *:not(style)\";\nexport function getStackStyles(options) {\n  var spacing = options.spacing,\n      direction = options.direction;\n  var directionStyles = {\n    column: {\n      mt: spacing,\n      ml: 0\n    },\n    row: {\n      ml: spacing,\n      mt: 0\n    },\n    \"column-reverse\": {\n      mb: spacing,\n      mr: 0\n    },\n    \"row-reverse\": {\n      mr: spacing,\n      mb: 0\n    }\n  };\n  return _defineProperty({\n    flexDirection: direction\n  }, selector, mapResponsive(direction, function (value) {\n    return directionStyles[value];\n  }));\n}\nexport function getDividerStyles(options) {\n  var spacing = options.spacing,\n      direction = options.direction;\n  var dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(direction, function (value) {\n      return dividerStyles[value];\n    })\n  };\n}","import _defineProperty from \"/home/jorge-n/Documents/workspace/portfolio/room/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { getDividerStyles, getStackStyles, selector } from \"./stack.utils\";\nexport var StackDivider = function StackDivider(props) {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-stack__divider\"\n  }, props, {\n    __css: _extends({}, props[\"__css\"], {\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\"\n    })\n  }));\n};\nexport var StackItem = function StackItem(props) {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-stack__item\"\n  }, props, {\n    __css: _extends({\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0\n    }, props[\"__css\"])\n  }));\n};\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/docs/layout/stack\n *\n */\n\nexport var Stack = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isInline = props.isInline,\n      directionProp = props.direction,\n      align = props.align,\n      justify = props.justify,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      wrap = props.wrap,\n      children = props.children,\n      divider = props.divider,\n      className = props.className,\n      shouldWrapChildren = props.shouldWrapChildren,\n      rest = _objectWithoutPropertiesLoose(props, [\"isInline\", \"direction\", \"align\", \"justify\", \"spacing\", \"wrap\", \"children\", \"divider\", \"className\", \"shouldWrapChildren\"]);\n\n  var direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  var styles = React.useMemo(function () {\n    return getStackStyles({\n      direction: direction,\n      spacing: spacing\n    });\n  }, [direction, spacing]);\n  var dividerStyle = React.useMemo(function () {\n    return getDividerStyles({\n      spacing: spacing,\n      direction: direction\n    });\n  }, [spacing, direction]);\n  var hasDivider = !!divider;\n  var shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  var validChildren = getValidChildren(children);\n  var clones = shouldUseChildren ? validChildren : validChildren.map(function (child, index) {\n    var isLast = index + 1 === validChildren.length;\n    var wrappedChild = /*#__PURE__*/React.createElement(StackItem, {\n      key: index\n    }, child);\n\n    var _child = shouldWrapChildren ? wrappedChild : child;\n\n    if (!hasDivider) return _child;\n    var clonedDivider = /*#__PURE__*/React.cloneElement(divider, {\n      __css: dividerStyle\n    });\n\n    var _divider = isLast ? null : clonedDivider;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index\n    }, _child, _divider);\n  });\n\n  var _className = cx(\"chakra-stack\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: styles.flexDirection,\n    flexWrap: wrap,\n    className: _className,\n    __css: hasDivider ? {} : _defineProperty({}, selector, styles[selector])\n  }, rest), clones);\n});\n\nif (__DEV__) {\n  Stack.displayName = \"Stack\";\n}\n/**\n * A view that arranges its children in a horizontal line.\n */\n\n\nexport var HStack = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"row\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  HStack.displayName = \"HStack\";\n}\n/**\n * A view that arranges its children in a vertical line.\n */\n\n\nexport var VStack = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"column\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  VStack.displayName = \"VStack\";\n}"],"sourceRoot":""}