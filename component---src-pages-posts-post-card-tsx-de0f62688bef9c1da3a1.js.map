{"version":3,"file":"component---src-pages-posts-post-card-tsx-de0f62688bef9c1da3a1.js","mappings":"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","sources":["webpack://jorge.room/./src/pages/posts/PostCard.tsx","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/box/box.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/flex/flex.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/image/native-image.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/image/image.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/image/use-image.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/stack/stack-item.mjs","webpack://jorge.room/./node_modules/@chakra-ui/utils/dist/esm/responsive.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/stack/stack.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/stack/stack.utils.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/typography/text.mjs","webpack://jorge.room/./node_modules/@chakra-ui/utils/dist/esm/children.mjs"],"sourcesContent":["import {\n    Box,\n    Flex,\n    Heading,\n    Image,\n    Stack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Post } from \"../../types\";\n\ninterface PostCardProps {\n    post: Post;\n    fullWidth: Boolean;\n}\n\nexport const PostCard: React.FC<PostCardProps> = ({\n    post: post,\n    fullWidth,\n}) => {\n    const special = post?.special;\n\n    return (\n        <>\n            {post ? (\n                <Stack\n                    borderRadius=\"5px\"\n                    w={\n                        special\n                            ? \"100%\"\n                            : fullWidth\n                              ? \"100%\"\n                              : [\"100%\", \"100%\", \"100%\", \"29%\"]\n                    }\n                    m=\"20px\"\n                    overflow=\"hidden\"\n                    background={\n                        special && post.isBanner\n                            ? \"unset\"\n                            : useColorModeValue(\"white\", \"#102435\")\n                    }\n                    position=\"relative\"\n                    direction={\n                        fullWidth\n                            ? [\"column\", \"column\", \"row\", \"row\"]\n                            : \"column\"\n                    }\n                    justifyContent={special ? \"center\" : \"auto\"}\n                    shadow={special ? \"none\" : \"xl\"}\n                >\n                    <Box\n                        maxHeight={\n                            fullWidth\n                                ? [\"100%\", \"100%\", \"250px\", \"250px\"]\n                                : \"unset\"\n                        }\n                        maxWidth={\n                            fullWidth\n                                ? [\"100%\", \"100%\", \"400px\", \"500px\", \"500px\"]\n                                : \"unset\"\n                        }\n                    >\n                        <Link to={post.slug}>\n                            <Image\n                                src={post.cover}\n                                alt={post.title}\n                                style={{ marginTop: \"-25%\", width: \"100%\" }}\n                                borderRadius={special ? \"7px\" : \"unset\"}\n                                shadow={special ? \"md\" : \"none\"}\n                            />\n                        </Link>\n                    </Box>\n                    <Link to={post.slug}>\n                        <Box\n                            {...(post.isBanner\n                                ? {\n                                      display: \"none\",\n                                  }\n                                : null)}\n                            p=\"10px 20px\"\n                        >\n                            <Text\n                                as=\"span\"\n                                fontSize=\"12px\"\n                                color={useColorModeValue(\"#666\", \"#CCC\")}\n                                fontWeight=\"bolder\"\n                            >\n                                {`${post.category.toUpperCase()}`}\n                            </Text>\n                            {\" • \"}\n                            <Text\n                                as=\"span\"\n                                fontSize=\"12px\"\n                                color={useColorModeValue(\"#666\", \"#CCC\")}\n                            >\n                                {`${post.post_date}`}\n                            </Text>\n                            <Heading fontSize=\"25px\">{post.title}</Heading>\n                            <Flex\n                                flexGrow={1}\n                                justifyContent=\"space-between\"\n                                flexDir=\"row\"\n                            >\n                                <Box\n                                    mt=\"10px\"\n                                    pb=\"25px\"\n                                    color={useColorModeValue(\"#666\", \"#CCC\")}\n                                    zIndex={0}\n                                >\n                                    <div\n                                        className=\"aviso-content-list\"\n                                        dangerouslySetInnerHTML={{\n                                            __html: post.content,\n                                        }}\n                                    />{\" \"}\n                                    <Text\n                                        style={{\n                                            color: useColorModeValue(\n                                                \"darkblue\",\n                                                \"lightblue\",\n                                            ),\n                                        }}\n                                    >\n                                        ler mais\n                                    </Text>\n                                </Box>\n                            </Flex>\n                        </Box>\n                    </Link>\n                </Stack>\n            ) : null}\n        </>\n    );\n};\n\nexport default PostCard;\n","'use client';\nimport { chakra } from '../system/factory.mjs';\n\nconst Box = chakra(\"div\");\nBox.displayName = \"Box\";\n\nexport { Box };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Flex = forwardRef(function Flex2(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nFlex.displayName = \"Flex\";\n\nexport { Flex };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport { NativeImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omit } from '@chakra-ui/utils';\nimport { NativeImage } from './native-image.mjs';\nimport { useImage, shouldShowFallbackImage } from './use-image.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport { Image };\n","'use client';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad?.(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError?.(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nconst shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport { shouldShowFallbackImage, useImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\n\nconst StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport { StackItem };\n","import { isObject } from './is.mjs';\n\nconst breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => obj[br] ?? null);\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nconst isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport { arrayToObjectNotation, breakpoints, isCustomBreakpoint, isResponsiveObjectLike, mapResponsive, objectToArrayNotation };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { useMemo, cloneElement, Fragment } from 'react';\nimport { StackItem } from './stack-item.mjs';\nimport { getDividerStyles } from './stack.utils.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp ?? \"column\";\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: direction,\n      flexWrap: wrap,\n      gap: hasDivider ? void 0 : spacing,\n      className: _className,\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport { Stack };\n","'use client';\nimport { mapResponsive } from '@chakra-ui/utils';\n\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport { getDividerStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Heading = forwardRef(\n  function Heading2(props, ref) {\n    const styles = useStyleConfig(\"Heading\", props);\n    const { className, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(\n      chakra.h2,\n      {\n        ref,\n        className: cx(\"chakra-heading\", props.className),\n        ...rest,\n        __css: styles\n      }\n    );\n  }\n);\nHeading.displayName = \"Heading\";\n\nexport { Heading };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { compact, cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport { Text };\n","import { Children, isValidElement } from 'react';\n\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\n\nexport { getValidChildren };\n"],"names":["PostCard","_ref","post","fullWidth","special","React","Stack","borderRadius","w","m","overflow","background","isBanner","useColorModeValue","position","direction","justifyContent","shadow","Box","maxHeight","maxWidth","Link","to","slug","Image","src","cover","alt","title","style","marginTop","width","Object","assign","display","p","Text","as","fontSize","color","fontWeight","category","toUpperCase","post_date","Heading","Flex","flexGrow","flexDir","mt","pb","zIndex","className","dangerouslySetInnerHTML","__html","content","displayName","props","ref","align","justify","wrap","basis","grow","shrink","rest","styles","flexDirection","alignItems","flexWrap","flexBasis","flexShrink","jsx","div","__css","NativeImage","htmlWidth","htmlHeight","height","fallbackSrc","fallback","srcSet","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","omit","StackItem","flex","minWidth","freeze","isInline","directionProp","spacing","children","divider","shouldWrapChildren","dividerStyle","useMemo","options","dividerStyles","column","my","mx","borderLeftWidth","borderBottomWidth","row","prop","mapper","value","Array","isArray","map","item","is","keys","reduce","result","key","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","child","index","isLast","length","_child","clonedDivider","cloneElement","_divider","jsxs","Fragment","_className","cx","gap","h2","decoration","casing","aliasedProps","textAlign","textDecoration","textTransform","getValidChildren","Children","toArray","filter","isValidElement"],"sourceRoot":""}