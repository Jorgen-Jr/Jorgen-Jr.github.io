{"version":3,"sources":["webpack:///./src/pages/projects/index.tsx","webpack:///./src/components/Projects/ProjectCard.tsx","webpack:///./src/components/Projects/index.tsx","webpack:///./node_modules/@chakra-ui/breadcrumb/dist/esm/breadcrumb.js","webpack:///./node_modules/@chakra-ui/utils/dist/esm/responsive.js","webpack:///./node_modules/@chakra-ui/layout/dist/esm/stack.utils.js","webpack:///./node_modules/@chakra-ui/layout/dist/esm/stack.js"],"names":["ProjectsFeed","projects","useStaticQuery","allMarkdownRemark","nodes","map","item","icon","frontmatter","name","description","short_description","slide","title","lang","className","mt","mb","p","flexDir","h","alignItems","separator","color","fontWeight","fontSize","to","isCurrentPage","MotionStack","motion","custom","Stack","ProjectCard","project","slug","style","textDecoration","borderRadius","w","m","overflow","position","textAlign","cursor","shadow","background","useColorModeValue","whileHover","scale","zIndex","transition","duration","type","bounce","justifyContent","src","alt","boxSize","minH","height","flexGrow","alignContent","fontFamily","pb","ChevronRight","fields","category","tags","length","flexDirection","Sun","textTransform","size","as","maxW","colo","alignSelf","flexWrap","index","key","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","BreadcrumbSeparator","props","ref","spacing","rest","separatorStyles","mx","span","role","__css","displayName","BreadcrumbLink","styles","sharedProps","link","a","BreadcrumbItem","isLastChild","children","clones","child","itemStyles","display","_className","li","Breadcrumb","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","nav","container","value","ol","freeze","mapResponsive","prop","mapper","object","reduce","result","selector","div","flex","minWidth","isInline","directionProp","direction","align","justify","_props$spacing","wrap","divider","shouldWrapChildren","options","directionStyles","column","marginTop","marginEnd","marginBottom","marginStart","row","getStackStyles","dividerStyle","dividerStyles","my","borderLeftWidth","borderBottomWidth","getDividerStyles","hasDivider","shouldUseChildren","isLast","_child","_divider","HStack","VStack"],"mappings":"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","file":"component---src-pages-projects-index-tsx-5dae262f6b2c7c7699fe.js","sourcesContent":["import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Box, Breadcrumb, BreadcrumbItem, Flex } from \"@chakra-ui/react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Layout from \"../../components/Layout\";\nimport SEO from \"../../components/Seo\";\nimport Projects from \"../../components/Projects\";\nimport { Project } from \"../../types\";\n\nfunction ProjectsFeed() {\n    const { allMarkdownRemark } = useStaticQuery(\n        graphql`\n            {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n                allMarkdownRemark(\n                    filter: {\n                        frontmatter: {\n                            layout: { eq: \"project\" }\n                            active: { eq: true }\n                        }\n                    }\n                    sort: { fields: frontmatter___date, order: ASC }\n                ) {\n                    nodes {\n                        id\n                        html\n                        frontmatter {\n                            layout\n                            description\n                            short_description\n                            icon\n                            link\n                            name\n                            title\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        `\n    );\n\n    const projects: Project[] = allMarkdownRemark.nodes.map((item) => {\n        let project: Project = {\n            icon: item.frontmatter.icon,\n            name: item.frontmatter.name,\n            description: item.frontmatter.description,\n            short_description: item.frontmatter.short_description,\n        };\n        return project;\n    });\n\n    return (\n        <Layout slide={4}>\n            <SEO\n                title={\"Projetos - Jorge.room\"}\n                description={\"Jorge - Conheça os projetos.\"}\n                lang=\"pt-BR\"\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0 30px\", \"0 100px\"]}\n            >\n                {/* Breadcrumb e cabeçalho */}\n                <Flex flexDir=\"column\" mb=\"35px\">\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem isCurrentPage>\n                                <Link to=\"/#\">Projetos</Link>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n                </Flex>\n                <Projects projects={projects} />\n            </Box>\n        </Layout>\n    );\n}\n\nexport default ProjectsFeed;\n","import React from \"react\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Flex,\n    Heading,\n    Image,\n    Stack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { Link } from \"gatsby\";\n\nimport { Project } from \"../../types\";\n\nimport { motion } from \"framer-motion\";\n\nconst MotionStack = motion.custom(Stack);\n\ninterface ProjectCardProps {\n    project: Project;\n}\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n    project: project,\n}) => {\n    return (\n        <Link\n            to={project.slug || null}\n            style={{\n                textDecoration: \"none\",\n            }}\n        >\n            <MotionStack\n                borderRadius=\"md\"\n                w={[\"auto\", \"auto\", \"300px\"]}\n                m=\"20px\"\n                overflow=\"hidden\"\n                position=\"relative\"\n                textAlign=\"center\"\n                cursor=\"pointer\"\n                shadow=\"md\"\n                background={useColorModeValue(\"white\", \"#102435\")}\n                whileHover={{\n                    scale: 1.5,\n                    zIndex: 1,\n                    transition: { duration: 0.4, type: \"spring\", bounce: 0.5 },\n                }}\n            >\n                <Flex\n                    flexDir=\"column\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    {project.icon ? (\n                        <Image\n                            src={project.icon}\n                            alt={project.name}\n                            boxSize=\"150px\"\n                            minH=\"53px\"\n                            height=\"auto\"\n                        />\n                    ) : (\n                        <Flex\n                            flexGrow={1}\n                            minH=\"80px\"\n                            justifyContent=\"center\"\n                            alignContent=\"center\"\n                            flexDir=\"column\"\n                        >\n                            <Heading\n                                fontFamily=\"FiraCode\"\n                                fontWeight=\"bolder\"\n                                fontSize=\"24px\"\n                            >\n                                {project.name}\n                            </Heading>\n                        </Flex>\n                    )}\n                    <Box p=\"10px\">\n                        <Flex\n                            flexGrow={1}\n                            justifyContent=\"space-between\"\n                            flexDir=\"column\"\n                        >\n                            <Text mt=\"10px\" p=\"10px\" pb=\"25px\" zIndex={0}>\n                                {project.short_description}\n                            </Text>\n                            <Flex justifyContent=\"center\" alignItems=\"center\">\n                                Clique Para Saber Mais\n                                <Box>\n                                    <ChevronRightIcon boxSize=\"32px\" />\n                                </Box>\n                            </Flex>\n                        </Flex>\n                    </Box>\n                </Flex>\n            </MotionStack>\n        </Link>\n    );\n};\n","import { Box, Flex, Heading, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport { Project } from \"../../types\";\nimport { SunIcon } from \"@chakra-ui/icons\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface ServicosProps {\n    projects?: Project[];\n}\n\nexport const ProjectsFeed: React.FC<ServicosProps> = () => {\n    const { allMarkdownRemark } = useStaticQuery(graphql`\n        {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n            allMarkdownRemark(\n                filter: {\n                    frontmatter: {\n                        layout: { eq: \"project\" }\n                        active: { eq: true }\n                    }\n                }\n                sort: { fields: frontmatter___date, order: ASC }\n            ) {\n                nodes {\n                    id\n                    html\n                    frontmatter {\n                        layout\n                        description\n                        short_description\n                        icon\n                        name\n                        title\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    `);\n\n    const projects: Project[] = allMarkdownRemark.nodes.map((item) => {\n        let project: Project = {\n            icon: item.frontmatter.icon,\n            name: item.frontmatter.name,\n            description: item.frontmatter.description,\n            short_description: item.frontmatter.short_description,\n            slug: item.fields.slug,\n            category: item.frontmatter.category,\n            tags: item.frontmatter.tags,\n        };\n        return project;\n    });\n\n    return (\n        <>\n            {projects.length > 0 && (\n                <Flex\n                    minH=\"60vh\"\n                    alignItems={[\"center\"]}\n                    flexDirection={[\"column\"]}\n                >\n                    <Flex justifyContent=\"center\">\n                        <SunIcon boxSize=\"42px\" color=\"#666\" />\n                    </Flex>\n\n                    <Flex\n                        justifyContent=\"center\"\n                        textTransform=\"uppercase\"\n                        m=\"15px\"\n                        textAlign=\"center\"\n                    >\n                        <Box>\n                            <Heading fontWeight=\"light\" size=\"lg\">\n                                <Text as=\"span\">Conheça os</Text>\n                                <Text as=\"span\" fontWeight=\"bold\">\n                                    {\" \"}\n                                    Projetos\n                                </Text>\n                            </Heading>\n                        </Box>\n                    </Flex>\n\n                    <Flex justifyContent=\"center\">\n                        <Box\n                            maxW=\"450px\"\n                            textAlign=\"center\"\n                            colo\n                            color={useColorModeValue(\"#666\", \"#CCC\")}\n                            m={[\"15px\", \"0\"]}\n                        >\n                            <Text>\n                                Conheça meus projetos, que participei e\n                                desenvolvi\n                            </Text>\n                        </Box>\n                    </Flex>\n\n                    <Flex\n                        mt=\"30px\"\n                        justifyContent=\"center\"\n                        alignSelf=\"center\"\n                        flexWrap=\"wrap\"\n                        transition=\"0.2s\"\n                        maxW={[\"100%\", \"1450px\"]}\n                    >\n                        {projects.map((project, index) => (\n                            <ProjectCard\n                                key={\"servico\" + index}\n                                project={project}\n                            />\n                        ))}\n                    </Flex>\n                </Flex>\n            )}\n        </>\n    );\n};\n\nexport default ProjectsFeed;\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { getValidChildren } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\n/**\n * React component that separates each breadcrumb link\n */\n\nexport var BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n      rest = _objectWithoutPropertiesLoose(props, [\"spacing\"]);\n\n  var styles = useStyles();\n\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\n\n\nexport var BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      as = props.as,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"as\", \"className\"]);\n\n  var styles = useStyles();\n\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link\n  }, sharedProps));\n});\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\n\n\nexport var BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n      separator = props.separator,\n      isLastChild = props.isLastChild,\n      spacing = props.spacing,\n      children = props.children,\n      className = props.className,\n      rest = _objectWithoutPropertiesLoose(props, [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n\n    return child;\n  });\n  var styles = useStyles();\n\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/docs/components/breadcrumbs\n */\n\n\nexport var Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n\n  var children = ownProps.children,\n      _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      _ownProps$separator = ownProps.separator,\n      separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n      className = ownProps.className,\n      rest = _objectWithoutPropertiesLoose(ownProps, [\"children\", \"spacing\", \"separator\", \"className\"]);\n\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n\n  var _className = cx(\"chakra-breadcrumb\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}","import \"core-js/modules/es.array.reduce.js\";\nimport { getLastItem } from \"./array\";\nimport { isArray, isObject } from \"./assertion\";\nimport { objectKeys } from \"./object\";\nexport var breakpoints = Object.freeze([\"base\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"]);\nexport function mapResponsive(prop, mapper) {\n  if (isArray(prop)) {\n    return prop.map(function (item) {\n      if (item === null) {\n        return null;\n      }\n\n      return mapper(item);\n    });\n  }\n\n  if (isObject(prop)) {\n    return objectKeys(prop).reduce(function (result, key) {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n\n  if (prop != null) {\n    return mapper(prop);\n  }\n\n  return null;\n}\nexport function objectToArrayNotation(obj, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var result = bps.map(function (br) {\n    var _obj$br;\n\n    return (_obj$br = obj[br]) != null ? _obj$br : null;\n  });\n\n  while (getLastItem(result) === null) {\n    result.pop();\n  }\n\n  return result;\n}\nexport function arrayToObjectNotation(values, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var result = {};\n  values.forEach(function (value, index) {\n    var key = bps[index];\n    if (value == null) return;\n    result[key] = value;\n  });\n  return result;\n}\nexport function isResponsiveObjectLike(obj, bps) {\n  if (bps === void 0) {\n    bps = breakpoints;\n  }\n\n  var keys = Object.keys(obj);\n  return keys.length > 0 && keys.every(function (key) {\n    return bps.includes(key);\n  });\n}\n/**\n * since breakpoints are defined as custom properties on an array, you may\n * `Object.keys(theme.breakpoints)` to retrieve both regular numeric indices\n * and custom breakpoints as string.\n *\n * This function returns true given a custom array property.\n */\n\nexport var isCustomBreakpoint = function isCustomBreakpoint(maybeBreakpoint) {\n  return Number.isNaN(Number(maybeBreakpoint));\n};","import _defineProperty from \"/home/runner/work/room/room/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { mapResponsive } from \"@chakra-ui/utils\";\n/**\n * If we ever run into SSR issues with this, check this post to find a fix for it:\n * @see https://medium.com/@emmenko/patching-lobotomized-owl-selector-for-emotion-ssr-5a582a3c424c\n */\n\nexport var selector = \"& > *:not(style) ~ *:not(style)\";\nexport function getStackStyles(options) {\n  var spacing = options.spacing,\n      direction = options.direction;\n  var directionStyles = {\n    column: {\n      marginTop: spacing,\n      marginEnd: 0,\n      marginBottom: 0,\n      marginStart: 0\n    },\n    row: {\n      marginTop: 0,\n      marginEnd: 0,\n      marginBottom: 0,\n      marginStart: spacing\n    },\n    \"column-reverse\": {\n      marginTop: 0,\n      marginEnd: 0,\n      marginBottom: spacing,\n      marginStart: 0\n    },\n    \"row-reverse\": {\n      marginTop: 0,\n      marginEnd: spacing,\n      marginBottom: 0,\n      marginStart: 0\n    }\n  };\n  return _defineProperty({\n    flexDirection: direction\n  }, selector, mapResponsive(direction, function (value) {\n    return directionStyles[value];\n  }));\n}\nexport function getDividerStyles(options) {\n  var spacing = options.spacing,\n      direction = options.direction;\n  var dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(direction, function (value) {\n      return dividerStyles[value];\n    })\n  };\n}","import _defineProperty from \"/home/runner/work/room/room/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { getValidChildren } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { getDividerStyles, getStackStyles, selector } from \"./stack.utils\";\nexport var StackDivider = function StackDivider(props) {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-stack__divider\"\n  }, props, {\n    __css: _extends({}, props[\"__css\"], {\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\"\n    })\n  }));\n};\nexport var StackItem = function StackItem(props) {\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-stack__item\"\n  }, props, {\n    __css: _extends({\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0\n    }, props[\"__css\"])\n  }));\n};\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/docs/layout/stack\n *\n */\n\nexport var Stack = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isInline = props.isInline,\n      directionProp = props.direction,\n      align = props.align,\n      justify = props.justify,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n      wrap = props.wrap,\n      children = props.children,\n      divider = props.divider,\n      className = props.className,\n      shouldWrapChildren = props.shouldWrapChildren,\n      rest = _objectWithoutPropertiesLoose(props, [\"isInline\", \"direction\", \"align\", \"justify\", \"spacing\", \"wrap\", \"children\", \"divider\", \"className\", \"shouldWrapChildren\"]);\n\n  var direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  var styles = React.useMemo(function () {\n    return getStackStyles({\n      direction: direction,\n      spacing: spacing\n    });\n  }, [direction, spacing]);\n  var dividerStyle = React.useMemo(function () {\n    return getDividerStyles({\n      spacing: spacing,\n      direction: direction\n    });\n  }, [spacing, direction]);\n  var hasDivider = !!divider;\n  var shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  var validChildren = getValidChildren(children);\n  var clones = shouldUseChildren ? validChildren : validChildren.map(function (child, index) {\n    var isLast = index + 1 === validChildren.length;\n    var wrappedChild = /*#__PURE__*/React.createElement(StackItem, {\n      key: index\n    }, child);\n\n    var _child = shouldWrapChildren ? wrappedChild : child;\n\n    if (!hasDivider) return _child;\n    var clonedDivider = /*#__PURE__*/React.cloneElement(divider, {\n      __css: dividerStyle\n    });\n\n    var _divider = isLast ? null : clonedDivider;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index\n    }, _child, _divider);\n  });\n\n  var _className = cx(\"chakra-stack\", className);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: styles.flexDirection,\n    flexWrap: wrap,\n    className: _className,\n    __css: hasDivider ? {} : _defineProperty({}, selector, styles[selector])\n  }, rest), clones);\n});\n\nif (__DEV__) {\n  Stack.displayName = \"Stack\";\n}\n/**\n * A view that arranges its children in a horizontal line.\n */\n\n\nexport var HStack = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"row\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  HStack.displayName = \"HStack\";\n}\n/**\n * A view that arranges its children in a vertical line.\n */\n\n\nexport var VStack = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Stack, _extends({\n    align: \"center\"\n  }, props, {\n    direction: \"column\",\n    ref: ref\n  }));\n});\n\nif (__DEV__) {\n  VStack.displayName = \"VStack\";\n}"],"sourceRoot":""}