{"version":3,"file":"component---src-templates-project-tsx-8f079b289925ded8358f.js","mappings":"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","sources":["webpack://jorge.room/./src/templates/project.tsx","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-context.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-separator.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-item.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-link.mjs","webpack://jorge.room/./node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb.mjs"],"sourcesContent":["import { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Breadcrumb,\n    BreadcrumbItem,\n    BreadcrumbLink,\n    Flex,\n    Heading,\n    Image,\n    List,\n    ListItem,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\n\nimport \"./markdown.css\";\n\nconst ProjectTemplate = ({ data }) => {\n    const project = data.markdownRemark;\n\n    const theme = {\n        colors: {\n            primary: project.frontmatter.theme_color_primary || \"#db98b5\",\n            secondary: project.frontmatter.theme_color_secondary || \"#36557b\",\n            fontColor: project.frontmatter.theme_color_fontcolor || \"#053a63\",\n        },\n    };\n\n    return (\n        <Layout slide={{ index: -1, name: \"projeto\" }}>\n            <SEO\n                title={project.frontmatter.name}\n                description={\n                    \"Jorge's Room - \" + project.frontmatter.short_description\n                }\n                image={project.frontmatter.illustration}\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0 30px\", \"0 100px\"]}\n            >\n                <Flex flexDir=\"column\" mb=\"35px\">\n                    {/* Breadcrumb e cabeçalho */}\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem>\n                                <Link to=\"/#projetos\">Projetos</Link>\n                            </BreadcrumbItem>\n\n                            <BreadcrumbItem isCurrentPage>\n                                <BreadcrumbLink href=\"#\">\n                                    {project.frontmatter.name}\n                                </BreadcrumbLink>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n\n                    <Flex\n                        flexDir=\"column\"\n                        position=\"relative\"\n                        w=\"100%\"\n                        height=\"auto\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        p=\"30px\"\n                        color=\"#EEE\"\n                    >\n                        <Box\n                            backgroundColor=\"#000\"\n                            backgroundImage=\"linear-gradient( 112.1deg,  rgba(32,38,57,1) 11.4%, rgba(63,76,119,1) 70.2% )\"\n                            position=\"absolute\"\n                            h=\"100%\"\n                            w=\"200%\"\n                            left={-100}\n                            bottom={0}\n                            zIndex={-1}\n                            opacity={0.9}\n                            overflow=\"hidden\"\n                        >\n                            {project.frontmatter.cover ? (\n                                <>\n                                    <Box\n                                        position=\"absolute\"\n                                        background=\"linear-gradient( 112.1deg,  rgba(32,38,57,0.6) 11.4%, rgba(63,76,119,0.6) 70.2% )\"\n                                        w=\"100%\"\n                                        h=\"100%\"\n                                        top={0}\n                                        left={0}\n                                    ></Box>\n                                    <Image\n                                        src={project.frontmatter.cover}\n                                        alt={\n                                            \"Capa do project \" +\n                                            project.frontmatter.name\n                                        }\n                                        objectFit=\"cover\"\n                                        boxSize=\"100%\"\n                                    />\n                                </>\n                            ) : (\n                                <Box\n                                    boxSize=\"100%\"\n                                    bgColor={\n                                        project.frontmatter.theme_color_primary\n                                    }\n                                >\n                                    {\" \"}\n                                </Box>\n                            )}\n                        </Box>\n                        <Flex justifyContent=\"center\">\n                            {project.frontmatter.icon ? (\n                                <Image\n                                    alt={project.frontmatter.name}\n                                    src={project.frontmatter.icon}\n                                    maxH=\"90px\"\n                                    objectFit=\"contain\"\n                                />\n                            ) : (\n                                <Flex\n                                    flexGrow={1}\n                                    minH=\"80px\"\n                                    justifyContent=\"center\"\n                                    alignContent=\"center\"\n                                    flexDir=\"column\"\n                                >\n                                    <Heading\n                                        fontFamily=\"FiraCode\"\n                                        fontWeight=\"bolder\"\n                                        fontSize=\"32px\"\n                                    >\n                                        {project.frontmatter.name}\n                                    </Heading>\n                                </Flex>\n                            )}\n                        </Flex>\n\n                        <Flex justifyContent=\"center\" mt=\"15px\">\n                            <Box maxW=\"450px\" textAlign=\"center\" color=\"#CCC\">\n                                <Text>{project.frontmatter.category}</Text>\n                            </Box>\n                        </Flex>\n\n                        <Flex\n                            m=\"10px 0\"\n                            flexDir=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            pos=\"relative\"\n                        >\n                            <List\n                                display=\"flex\"\n                                flexWrap=\"wrap\"\n                                justifyContent=\"center/\"\n                            >\n                                {project.frontmatter.tags.map((tag, index) => (\n                                    <ListItem\n                                        key={index}\n                                        p=\"10px 15px \"\n                                        m=\"3px 7px\"\n                                        borderRadius=\"7px\"\n                                        backgroundColor={`#333`}\n                                        color=\"white\"\n                                        fontWeight=\"bolder\"\n                                    >\n                                        {tag}\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </Flex>\n                    </Flex>\n                </Flex>\n\n                <Flex flexDir={[\"column\"]}>\n                    <section title=\"Cabeçalho \">\n                        <Flex justifyContent=\"center\">\n                            {project.frontmatter.illustration && (\n                                <Image\n                                    alt={\n                                        \"Illustração do project \" +\n                                        project.frontmatter.name\n                                    }\n                                    src={project.frontmatter.illustration}\n                                    maxH=\"500px\"\n                                />\n                            )}\n                        </Flex>\n\n                        <Flex\n                            justifyContent=\"center\"\n                            wrap=\"wrap\"\n                            alignItems=\"baseline\"\n                        ></Flex>\n                    </section>\n\n                    {/* Descrição Completa */}\n                    <Flex\n                        m=\"10px 0\"\n                        flexDir=\"column\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        pos=\"relative\"\n                    >\n                        <Box\n                            color={useColorModeValue(\n                                theme.colors.fontColor,\n                                \"#ddd\"\n                            )}\n                            p=\"20px\"\n                            // bgColor={theme.colors.secondary}\n                            borderRadius=\"lg\"\n                            maxWidth=\"1000px\"\n                            className=\"post-content-full\"\n                            dangerouslySetInnerHTML={{ __html: project.html }}\n                        />\n                    </Flex>\n                </Flex>\n            </Box>\n        </Layout>\n    );\n};\n\nexport default ProjectTemplate;\n\nexport const pageQuery = graphql`\n    query Project($id: String!) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            html\n            frontmatter {\n                layout\n                description\n                short_description\n                icon\n                name\n                title\n                cover\n                link\n                category\n                tags\n                illustration\n                theme_color_primary\n                theme_color_secondary\n                theme_color_fontcolor\n            }\n            fields {\n                slug\n            }\n        }\n    }\n`;\n","'use client';\nimport { createContext } from '@chakra-ui/utils';\n\nconst [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `\n});\n\nexport { BreadcrumbStylesProvider, useBreadcrumbStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbSeparator = forwardRef(\n  function BreadcrumbSeparator2(props, ref) {\n    const { spacing, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const separatorStyles = defineStyle({\n      mx: spacing,\n      ...styles.separator\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ref,\n        role: \"presentation\",\n        ...rest,\n        __css: separatorStyles\n      }\n    );\n  }\n);\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nexport { BreadcrumbSeparator };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { BreadcrumbLink } from './breadcrumb-link.mjs';\nimport { BreadcrumbSeparator } from './breadcrumb-separator.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbItem = forwardRef(\n  function BreadcrumbItem2(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props;\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage\n        });\n      }\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator\n        });\n      }\n      return child;\n    });\n    const styles = useBreadcrumbStyles();\n    const itemStyles = defineStyle({\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item\n    });\n    const _className = cx(\"chakra-breadcrumb__list-item\", className);\n    return /* @__PURE__ */ jsxs(chakra.li, { ref, className: _className, ...rest, __css: itemStyles, children: [\n      clones,\n      !isLastChild && /* @__PURE__ */ jsx(BreadcrumbSeparator, { spacing, children: separator })\n    ] });\n  }\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nexport { BreadcrumbItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbLink = forwardRef(\n  function BreadcrumbLink2(props, ref) {\n    const { isCurrentPage, as, className, href, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest\n    };\n    if (isCurrentPage) {\n      return /* @__PURE__ */ jsx(chakra.span, { \"aria-current\": \"page\", __css: styles.link, ...sharedProps });\n    }\n    return /* @__PURE__ */ jsx(chakra.a, { __css: styles.link, href, ...sharedProps });\n  }\n);\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nexport { BreadcrumbLink };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { BreadcrumbStylesProvider } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Breadcrumb = forwardRef(\n  function Breadcrumb2(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps;\n    const validChildren = getValidChildren(children);\n    const count = validChildren.length;\n    const clones = validChildren.map(\n      (child, index) => cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1\n      })\n    );\n    const _className = cx(\"chakra-breadcrumb\", className);\n    return /* @__PURE__ */ jsx(\n      chakra.nav,\n      {\n        ref,\n        \"aria-label\": \"breadcrumb\",\n        className: _className,\n        __css: styles.container,\n        ...rest,\n        children: /* @__PURE__ */ jsx(BreadcrumbStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n          chakra.ol,\n          {\n            className: \"chakra-breadcrumb__list\",\n            ...listProps,\n            __css: {\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list\n            },\n            children: clones\n          }\n        ) })\n      }\n    );\n  }\n);\nBreadcrumb.displayName = \"Breadcrumb\";\n\nexport { Breadcrumb };\n"],"names":["_ref","data","project","markdownRemark","theme","colors","primary","frontmatter","theme_color_primary","secondary","theme_color_secondary","fontColor","theme_color_fontcolor","React","Layout","slide","index","name","SEO","title","description","short_description","image","illustration","Box","className","mt","mb","p","Flex","flexDir","h","alignItems","Breadcrumb","separator","ChevronRightIcon","color","fontWeight","fontSize","BreadcrumbItem","Link","to","isCurrentPage","BreadcrumbLink","href","position","w","height","justifyContent","backgroundColor","backgroundImage","left","bottom","zIndex","opacity","overflow","cover","background","top","Image","src","alt","objectFit","boxSize","bgColor","icon","maxH","flexGrow","minH","alignContent","Heading","fontFamily","maxW","textAlign","Text","category","m","pos","List","display","flexWrap","tags","map","tag","ListItem","key","borderRadius","wrap","useColorModeValue","maxWidth","dangerouslySetInnerHTML","__html","html","BreadcrumbStylesProvider","useBreadcrumbStyles","errorMessage","BreadcrumbSeparator","props","ref","spacing","rest","styles","separatorStyles","mx","jsx","span","role","__css","displayName","isLastChild","children","clones","child","type","cloneElement","itemStyles","item","_className","cx","jsxs","li","as","sharedProps","link","a","ownProps","listProps","validChildren","count","length","nav","container","value","ol","list"],"sourceRoot":""}