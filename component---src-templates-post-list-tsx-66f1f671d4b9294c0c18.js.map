{"version":3,"file":"component---src-templates-post-list-tsx-66f1f671d4b9294c0c18.js","mappings":"2OAIA,SAASA,IAYP,OAXAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GACvB,IAAK,IAAII,KAAOD,EACVN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,GAG3B,CACA,OAAOL,CACT,EACOH,EAASY,MAAMC,KAAMR,UAC9B,CACA,SAASS,EAA8BP,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAC5B,IAEIC,EAAKJ,EAFLD,EAAS,CAAC,EACVa,EAAaf,OAAOgB,KAAKV,GAE7B,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IACjCI,EAAMQ,EAAWZ,GACbW,EAASG,QAAQV,IAAQ,IAC7BL,EAAOK,GAAOD,EAAOC,IAEvB,OAAOL,CACT,CACA,IAAIgB,EAAY,CAAC,WACfC,EAAa,CAAC,gBAAiB,KAAM,YAAa,QAClDC,EAAa,CAAC,gBAAiB,YAAa,cAAe,UAAW,WAAY,aAClFC,EAAa,CAAC,WAAY,UAAW,YAAa,aAKhDC,GAAmC,SAAW,SAAUC,EAAOC,GACjE,IAAIC,EAAUF,EAAME,QAClBC,EAAOb,EAA8BU,EAAOL,GAE1CS,EAAkB5B,EAAS,CAC7B6B,GAAIH,IAFO,UAGHI,WACV,OAAoB,gBAAoB,KAAOC,KAAM/B,EAAS,CAC5DyB,IAAKA,EACLO,KAAM,gBACLL,EAAM,CACPM,MAAOL,IAEX,IACI,OACFL,EAAoBW,YAAc,uBASpC,IAAIC,GAA8B,SAAW,SAAUX,EAAOC,GAC5D,IAAIW,EAAgBZ,EAAMY,cACxBC,EAAKb,EAAMa,GACXC,EAAYd,EAAMc,UAClBC,EAAOf,EAAMe,KACbZ,EAAOb,EAA8BU,EAAOJ,GAC1CoB,GAAS,UACTC,EAAczC,EAAS,CACzByB,IAAKA,EACLY,GAAIA,EACJC,WAAW,IAAAI,IAAG,0BAA2BJ,IACxCX,GACH,OAAIS,EACkB,gBAAoB,KAAOL,KAAM/B,EAAS,CAC5D,eAAgB,OAChBiC,MAAOO,EAAOG,MACbF,IAEe,gBAAoB,KAAOG,EAAG5C,EAAS,CACzDiC,MAAOO,EAAOG,KACdJ,KAAMA,GACLE,GACL,IACI,OACFN,EAAeD,YAAc,kBAS/B,IAAIW,GAA8B,SAAW,SAAUrB,EAAOC,GAC5D,IAAIW,EAAgBZ,EAAMY,cACxBN,EAAYN,EAAMM,UAClBgB,EAActB,EAAMsB,YACpBpB,EAAUF,EAAME,QAChBqB,EAAWvB,EAAMuB,SACjBT,EAAYd,EAAMc,UAClBX,EAAOb,EAA8BU,EAAOH,GAE1C2B,GADgB,QAAiBD,GACVE,KAAI,SAAUC,GACvC,OAAIA,EAAMC,OAAShB,EACG,eAAmBe,EAAO,CAC5Cd,cAAeA,IAGfc,EAAMC,OAAS5B,EACG,eAAmB2B,EAAO,CAC5CxB,QAASA,EACTqB,SAAUG,EAAM1B,MAAMuB,UAAYjB,IAG/BoB,CACT,IAEIE,EAAapD,EAAS,CACxBqD,QAAS,cACTC,WAAY,WAHD,UAIHC,MACNC,GAAa,IAAAd,IAAG,+BAAgCJ,GACpD,OAAoB,gBAAoB,KAAOmB,GAAIzD,EAAS,CAC1DyB,IAAKA,EACLa,UAAWkB,GACV7B,EAAM,CACPM,MAAOmB,IACLJ,GAASF,GAA4B,gBAAoBvB,EAAqB,CAChFG,QAASA,GACRI,GACL,IACI,OACFe,EAAeX,YAAc,kBAS/B,IAAIwB,GAA0B,SAAW,SAAUlC,EAAOC,GACxD,IAAIe,GAAS,QAAoB,aAAchB,GAC3CmC,GAAW,QAAiBnC,GAC5BuB,EAAWY,EAASZ,SACtBa,EAAoBD,EAASjC,QAC7BA,OAAgC,IAAtBkC,EAA+B,SAAWA,EACpDC,EAAsBF,EAAS7B,UAC/BA,OAAoC,IAAxB+B,EAAiC,IAAMA,EACnDvB,EAAYqB,EAASrB,UACrBX,EAAOb,EAA8B6C,EAAUrC,GAC7CwC,GAAgB,QAAiBf,GACjCgB,EAAQD,EAAcxD,OACtB0C,EAASc,EAAcb,KAAI,SAAUC,EAAOc,GAC9C,OAAoB,eAAmBd,EAAO,CAC5CpB,UAAWA,EACXJ,QAASA,EACToB,YAAaiB,IAAUC,EAAQ,GAEnC,IACIR,GAAa,IAAAd,IAAG,oBAAqBJ,GACzC,OAAoB,gBAAoB,KAAO2B,IAAKjE,EAAS,CAC3DyB,IAAKA,EACL,aAAc,aACda,UAAWkB,EACXvB,MAAOO,EAAO0B,WACbvC,GAAoB,gBAAoB,KAAgB,CACzDwC,MAAO3B,GACO,gBAAoB,KAAO4B,GAAI,CAC7C9B,UAAW,2BACVU,IACL,IACI,OACFU,EAAWxB,YAAc,a,0HC7JpB,MAAMmC,EAAoCC,IAG1C,IAFHC,KAAMA,EAAI,UACVC,GACHF,EACG,MAAMG,EAAUF,aAAI,EAAJA,EAAME,QAEtB,OACIC,EAAAA,cAAAA,EAAAA,SAAA,KACKH,EACGG,EAAAA,cAACC,EAAAA,GAAK,CACFC,aAAa,MACbC,EACIJ,GAEMD,EADA,OAGA,CAAC,OAAQ,OAAQ,OAAQ,OAEnCM,EAAE,OACFC,SAAS,SACTC,WACIP,GAAWF,EAAKU,SACV,SACAC,EAAAA,EAAAA,IAAkB,QAAS,WAErCC,SAAS,WACTC,UACIZ,EACM,CAAC,SAAU,SAAU,MAAO,OAC5B,SAEVa,eAAgBZ,EAAU,SAAW,OACrCa,OAAQb,EAAU,OAAS,MAE3BC,EAAAA,cAACa,EAAAA,GAAG,CACAC,UACIhB,EACM,CAAC,OAAQ,OAAQ,QAAS,SAC1B,QAEViB,SACIjB,EACM,CAAC,OAAQ,OAAQ,QAAS,QAAS,SACnC,SAGVE,EAAAA,cAACgB,EAAAA,KAAI,CACDC,GAAIpB,EAAKqB,MAGTlB,EAAAA,cAACmB,EAAAA,GAAK,CACFC,IAAKvB,EAAKwB,MACVC,IAAKzB,EAAK0B,MACVC,QAAS3B,EAAKU,SAAW,QAAU,OACnCkB,MAAO,CAAEC,UAAW,OAAQC,MAAO,QACnCzB,aAAcH,EAAU,MAAQ,QAChCa,OAAQb,EAAU,KAAO,WAIrCC,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAIpB,EAAKqB,MACXlB,EAAAA,cAACa,EAAAA,GAAGtF,OAAAC,OAAA,GACKqE,EAAKU,SACJ,CACI5B,QAAS,QAEb,KAAI,CACViD,EAAE,cAEF5B,EAAAA,cAAC6B,EAAAA,GAAI,CACDlE,GAAG,OACHmE,SAAS,OACTC,OAAOvB,EAAAA,EAAAA,IAAkB,OAAQ,QACjCwB,WAAW,UAEV,GAAGnC,EAAKoC,SAASC,iBAErB,MACDlC,EAAAA,cAAC6B,EAAAA,GAAI,CACDlE,GAAG,OACHmE,SAAS,OACTC,OAAOvB,EAAAA,EAAAA,IAAkB,OAAQ,SAEhC,GAAGX,EAAKsC,aAEbnC,EAAAA,cAACoC,EAAAA,GAAO,CAACN,SAAS,QAAQjC,EAAK0B,OAC/BvB,EAAAA,cAACqC,EAAAA,GAAI,CACDC,SAAU,EACV3B,eAAe,gBACf4B,QAAQ,OAERvC,EAAAA,cAACa,EAAAA,GAAG,CACA2B,GAAG,OACHC,GAAG,OACHV,OAAOvB,EAAAA,EAAAA,IAAkB,OAAQ,QACjCkC,OAAQ,GAER1C,EAAAA,cAAA,OACIpC,UAAU,qBACV+E,wBAAyB,CACrBC,OAAQ/C,EAAKgD,WAElB,IACH7C,EAAAA,cAAC6B,EAAAA,GAAI,CACDJ,MAAO,CACHM,OAAOvB,EAAAA,EAAAA,IACH,WACA,eAGX,iBAQrB,KACL,EAIX,W,0HCaA,UAzIA,SAA0B1D,GACtB,MAAM,KAAEgG,GAAShG,GAEX,YAAEiG,EAAW,SAAEC,GAAalG,EAAMmG,YAElCC,EAAQJ,EAAKK,kBAAkBC,MAE/BC,EAA0B,IAAhBN,EACVO,EAASP,IAAgBC,EACzBO,EACFR,EAAc,GAAM,EACd,SACA,UAAYA,EAAc,GAAGS,WACjCC,EAAW,UAAYV,EAAc,GAAGS,WAExCE,EAAoBR,EAAM3E,KAAKM,IAChB,CACbsD,UAAWtD,EAAK8E,KAAKC,YAAYC,KACjC3C,KAAMrC,EAAK8E,KAAKG,OAAO5C,KACvBK,MAAO1C,EAAK8E,KAAKC,YAAYrC,MAC7BF,MAAOxC,EAAK8E,KAAKC,YAAYvC,MAC7BwB,QAAShE,EAAK8E,KAAKI,QACnBxD,SAAU1B,EAAK8E,KAAKC,YAAYrD,SAChCR,QAASlB,EAAK8E,KAAKC,YAAY7D,QAC/BkC,SAAUpD,EAAK8E,KAAKC,YAAY3B,aAKxC,OACIjC,EAAAA,cAACgE,EAAAA,EAAM,CAACC,MAAO,CAAE3E,OAAQ,EAAG4E,KAAM,SAC9BlE,EAAAA,cAACmE,EAAAA,EAAG,CACA5C,MAAO,OACP6C,YACI,oEAEJC,KAAK,UAGTrE,EAAAA,cAACa,EAAAA,GAAG,CACAjD,UAAU,UACV4E,GAAG,OACH8B,GAAG,OACH1C,EAAG,CAAC,SAAU,IAAK,IAAK,IAAK,YAG7B5B,EAAAA,cAACqC,EAAAA,GAAI,CAACE,QAAQ,SAAS+B,GAAG,OAAOC,GAAG,QAChCvE,EAAAA,cAACqC,EAAAA,GAAI,CAACmC,EAAE,OAAO5F,WAAW,UACtBoB,EAAAA,cAAChB,EAAAA,GAAU,CACP5B,UAAW4C,EAAAA,cAACyE,EAAAA,GAAgB,CAAC1C,MAAM,aACnCC,WAAW,SACXF,SAAS,MAET9B,EAAAA,cAAC7B,EAAAA,GAAc,KACX6B,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAG,MAAK,WAElBjB,EAAAA,cAAC7B,EAAAA,GAAc,CAACT,eAAa,GACzBsC,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAG,SAAQ,YAMjCjB,EAAAA,cAACqC,EAAAA,GAAI,CACDT,EAAG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,WAC7BjB,eAAe,gBACf+D,UAAU,SACVC,SAAS,QAERjB,EAAUnF,KAAI,CAACqG,EAAOtF,IACnBU,EAAAA,cAACL,EAAAA,SAAQ,CACL7D,IAAK,QAAUwD,EACfO,KAAM+E,EACN9E,UAAqB,IAAVR,QAO3BU,EAAAA,cAAC6E,EAAAA,GAAM,CAAC1E,EAAE,OAAOQ,eAAe,eAAeiB,EAAE,QAC3CyB,EAuBErD,EAAAA,cAACa,EAAAA,GAAG,MAtBJb,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAIsC,EAAUuB,IAAI,YACpB9E,EAAAA,cAACqC,EAAAA,GAAI,CAACzD,WAAW,UACboB,EAAAA,cAAC+E,EAAAA,GAAe,CACZC,QAAQ,OACRjD,OAAOvB,EAAAA,EAAAA,IAAkB,UAAW,aAEvC,KACDR,EAAAA,cAAC6B,EAAAA,GAAI,CACDlE,GAAG,OACHsH,OAAO,OACPjD,WAAW,SACXF,SAAS,SACTnD,QAAQ,OACRC,WAAW,SACXmD,OAAOvB,EAAAA,EAAAA,IAAkB,UAAW,WACpC0E,WAAW,OACd,qBASX5B,EAuBEtD,EAAAA,cAACa,EAAAA,GAAG,MAtBJb,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAIwC,EAAUqB,IAAI,WACpB9E,EAAAA,cAACqC,EAAAA,GAAI,CAACzD,WAAW,UACboB,EAAAA,cAAC6B,EAAAA,GAAI,CACDlE,GAAG,OACHsH,OAAO,OACPjD,WAAW,SACXF,SAAS,SACTnD,QAAQ,OACRC,WAAW,SACXmD,OAAOvB,EAAAA,EAAAA,IAAkB,UAAW,WACpC0E,WAAW,OACd,kBAGA,KACDlF,EAAAA,cAACyE,EAAAA,GAAgB,CACbO,QAAQ,OACRjD,OAAOvB,EAAAA,EAAAA,IAAkB,UAAW,gBAUpE,C","sources":["webpack://jorge.room/./node_modules/@chakra-ui/breadcrumb/dist/chakra-ui-breadcrumb.esm.js","webpack://jorge.room/./src/pages/posts/PostCard.tsx","webpack://jorge.room/./src/templates/post-list.tsx"],"sourcesContent":["import { forwardRef, useStyles, chakra, useMultiStyleConfig, omitThemingProps, StylesProvider } from '@chakra-ui/system';\nimport { __DEV__, cx } from '@chakra-ui/utils';\nimport { getValidChildren } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"spacing\"],\n  _excluded2 = [\"isCurrentPage\", \"as\", \"className\", \"href\"],\n  _excluded3 = [\"isCurrentPage\", \"separator\", \"isLastChild\", \"spacing\", \"children\", \"className\"],\n  _excluded4 = [\"children\", \"spacing\", \"separator\", \"className\"];\n\n/**\n * React component that separates each breadcrumb link\n */\nvar BreadcrumbSeparator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var spacing = props.spacing,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var styles = useStyles();\n  var separatorStyles = _extends({\n    mx: spacing\n  }, styles.separator);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    role: \"presentation\"\n  }, rest, {\n    __css: separatorStyles\n  }));\n});\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it matches the current link. Otherwise,\n * it renders an anchor tag.\n */\nvar BreadcrumbLink = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    as = props.as,\n    className = props.className,\n    href = props.href,\n    rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  var styles = useStyles();\n  var sharedProps = _extends({\n    ref: ref,\n    as: as,\n    className: cx(\"chakra-breadcrumb__link\", className)\n  }, rest);\n  if (isCurrentPage) {\n    return /*#__PURE__*/React.createElement(chakra.span, _extends({\n      \"aria-current\": \"page\",\n      __css: styles.link\n    }, sharedProps));\n  }\n  return /*#__PURE__*/React.createElement(chakra.a, _extends({\n    __css: styles.link,\n    href: href\n  }, sharedProps));\n});\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\";\n}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar BreadcrumbItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var isCurrentPage = props.isCurrentPage,\n    separator = props.separator,\n    isLastChild = props.isLastChild,\n    spacing = props.spacing,\n    children = props.children,\n    className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, _excluded3);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    if (child.type === BreadcrumbLink) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isCurrentPage: isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        spacing: spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  var styles = useStyles();\n  var itemStyles = _extends({\n    display: \"inline-flex\",\n    alignItems: \"center\"\n  }, styles.item);\n  var _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: itemStyles\n  }), clones, !isLastChild && /*#__PURE__*/React.createElement(BreadcrumbSeparator, {\n    spacing: spacing\n  }, separator));\n});\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\";\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n */\nvar Breadcrumb = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Breadcrumb\", props);\n  var ownProps = omitThemingProps(props);\n  var children = ownProps.children,\n    _ownProps$spacing = ownProps.spacing,\n    spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n    _ownProps$separator = ownProps.separator,\n    separator = _ownProps$separator === void 0 ? \"/\" : _ownProps$separator,\n    className = ownProps.className,\n    rest = _objectWithoutPropertiesLoose(ownProps, _excluded4);\n  var validChildren = getValidChildren(children);\n  var count = validChildren.length;\n  var clones = validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      separator: separator,\n      spacing: spacing,\n      isLastChild: count === index + 1\n    });\n  });\n  var _className = cx(\"chakra-breadcrumb\", className);\n  return /*#__PURE__*/React.createElement(chakra.nav, _extends({\n    ref: ref,\n    \"aria-label\": \"breadcrumb\",\n    className: _className,\n    __css: styles.container\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.ol, {\n    className: \"chakra-breadcrumb__list\"\n  }, clones)));\n});\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\";\n}\nexport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbSeparator };","import {\n    Box,\n    Flex,\n    Heading,\n    Image,\n    Stack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport { Post } from \"../../types\";\n\ninterface PostCardProps {\n    post: Post;\n    fullWidth: Boolean;\n}\n\nexport const PostCard: React.FC<PostCardProps> = ({\n    post: post,\n    fullWidth,\n}) => {\n    const special = post?.special;\n\n    return (\n        <>\n            {post ? (\n                <Stack\n                    borderRadius=\"5px\"\n                    w={\n                        special\n                            ? \"100%\"\n                            : fullWidth\n                            ? \"100%\"\n                            : [\"100%\", \"100%\", \"100%\", \"29%\"]\n                    }\n                    m=\"20px\"\n                    overflow=\"hidden\"\n                    background={\n                        special && post.isBanner\n                            ? \"unset\"\n                            : useColorModeValue(\"white\", \"#102435\")\n                    }\n                    position=\"relative\"\n                    direction={\n                        fullWidth\n                            ? [\"column\", \"column\", \"row\", \"row\"]\n                            : \"column\"\n                    }\n                    justifyContent={special ? \"center\" : \"auto\"}\n                    shadow={special ? \"none\" : \"xl\"}\n                >\n                    <Box\n                        maxHeight={\n                            fullWidth\n                                ? [\"100%\", \"100%\", \"250px\", \"250px\"]\n                                : \"unset\"\n                        }\n                        maxWidth={\n                            fullWidth\n                                ? [\"100%\", \"100%\", \"400px\", \"500px\", \"500px\"]\n                                : \"unset\"\n                        }\n                    >\n                        <Link\n                            to={post.slug}\n                            // style={{  }}\n                        >\n                            <Image\n                                src={post.cover}\n                                alt={post.title}\n                                loading={post.isBanner ? \"eager\" : \"lazy\"}\n                                style={{ marginTop: \"-25%\", width: \"100%\" }}\n                                borderRadius={special ? \"7px\" : \"unset\"}\n                                shadow={special ? \"md\" : \"none\"}\n                            />\n                        </Link>\n                    </Box>\n                    <Link to={post.slug}>\n                        <Box\n                            {...(post.isBanner\n                                ? {\n                                      display: \"none\",\n                                  }\n                                : null)}\n                            p=\"10px 20px\"\n                        >\n                            <Text\n                                as=\"span\"\n                                fontSize=\"12px\"\n                                color={useColorModeValue(\"#666\", \"#CCC\")}\n                                fontWeight=\"bolder\"\n                            >\n                                {`${post.category.toUpperCase()}`}\n                            </Text>\n                            {\" • \"}\n                            <Text\n                                as=\"span\"\n                                fontSize=\"12px\"\n                                color={useColorModeValue(\"#666\", \"#CCC\")}\n                            >\n                                {`${post.post_date}`}\n                            </Text>\n                            <Heading fontSize=\"25px\">{post.title}</Heading>\n                            <Flex\n                                flexGrow={1}\n                                justifyContent=\"space-between\"\n                                flexDir=\"row\"\n                            >\n                                <Box\n                                    mt=\"10px\"\n                                    pb=\"25px\"\n                                    color={useColorModeValue(\"#666\", \"#CCC\")}\n                                    zIndex={0}\n                                >\n                                    <div\n                                        className=\"aviso-content-list\"\n                                        dangerouslySetInnerHTML={{\n                                            __html: post.content,\n                                        }}\n                                    />{\" \"}\n                                    <Text\n                                        style={{\n                                            color: useColorModeValue(\n                                                \"darkblue\",\n                                                \"lightblue\"\n                                            ),\n                                        }}\n                                    >\n                                        ler mais\n                                    </Text>\n                                </Box>\n                            </Flex>\n                        </Box>\n                    </Link>\n                </Stack>\n            ) : null}\n        </>\n    );\n};\n\nexport default PostCard;\n","import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n    Box,\n    Breadcrumb,\n    BreadcrumbItem,\n    Flex,\n    HStack,\n    Text,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport { PostCard } from \"../pages/posts/PostCard\";\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/Seo\";\nimport { Post } from \"../types\";\n\nfunction PostListTemplate(props) {\n    const { data } = props;\n\n    const { currentPage, numPages } = props.pageContext;\n\n    const posts = data.allMarkdownRemark.edges;\n\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numPages;\n    const prevPage =\n        currentPage - 1 === 1\n            ? \"/blog/\"\n            : \"/blog/\" + (currentPage - 1).toString();\n    const nextPage = \"/blog/\" + (currentPage + 1).toString();\n\n    const post_list: Post[] = posts.map((item) => {\n        let post: Post = {\n            post_date: item.node.frontmatter.date,\n            slug: item.node.fields.slug,\n            title: item.node.frontmatter.title,\n            cover: item.node.frontmatter.cover,\n            content: item.node.excerpt,\n            isBanner: item.node.frontmatter.isBanner,\n            special: item.node.frontmatter.special,\n            category: item.node.frontmatter.category,\n        };\n        return post;\n    });\n\n    return (\n        <Layout slide={{ index: -1, name: \"blog\" }}>\n            <SEO\n                title={\"Blog\"}\n                description={\n                    \"Jorge's Room - Blog posts e comunicados. Veja o conteudo postado.\"\n                }\n                lang=\"pt-BR\"\n            />\n\n            <Box\n                className=\"wrapper\"\n                mt=\"80px\"\n                mb=\"80px\"\n                p={[\"0 10px\", \"0\", \"0\", \"0\", \"0 100px\"]}\n            >\n                {/* Breadcrumb e cabeçalho */}\n                <Flex flexDir=\"column\" mb=\"35px\" ml=\"15px\">\n                    <Flex h=\"50px\" alignItems=\"center\">\n                        <Breadcrumb\n                            separator={<ChevronRightIcon color=\"gray.500\" />}\n                            fontWeight=\"medium\"\n                            fontSize=\"md\"\n                        >\n                            <BreadcrumbItem>\n                                <Link to=\"/#\">Início</Link>\n                            </BreadcrumbItem>\n                            <BreadcrumbItem isCurrentPage>\n                                <Link to=\"/blog\">Blog</Link>\n                            </BreadcrumbItem>\n                        </Breadcrumb>\n                    </Flex>\n                </Flex>\n\n                <Flex\n                    p={[\"0\", \"0\", \"0\", \"0\", \"0\", \"0 100px\"]}\n                    justifyContent=\"space-between\"\n                    alignSelf=\"center\"\n                    flexWrap=\"wrap\"\n                >\n                    {post_list.map((aviso, index) => (\n                        <PostCard\n                            key={\"aviso\" + index}\n                            post={aviso}\n                            fullWidth={index === 0}\n                        />\n                    ))}\n                </Flex>\n            </Box>\n\n            {/* Navegar entre próximo post e anterior */}\n            <HStack w=\"100%\" justifyContent=\"space-evenly\" p=\"30px\">\n                {!isFirst ? (\n                    <Link to={prevPage} rel=\"Anterior\">\n                        <Flex alignItems=\"center\">\n                            <ChevronLeftIcon\n                                boxSize=\"30px\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                            />\n                            {\"  \"}\n                            <Text\n                                as=\"span\"\n                                height=\"30px\"\n                                fontWeight=\"bolder\"\n                                fontSize=\"1.1rem\"\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                                paddingTop=\"2px\"\n                            >\n                                Página Anterior\n                            </Text>\n                        </Flex>\n                    </Link>\n                ) : (\n                    <Box></Box>\n                )}\n\n                {!isLast ? (\n                    <Link to={nextPage} rel=\"Próximo\">\n                        <Flex alignItems=\"center\">\n                            <Text\n                                as=\"span\"\n                                height=\"30px\"\n                                fontWeight=\"bolder\"\n                                fontSize=\"1.1rem\"\n                                display=\"flex\"\n                                alignItems=\"center\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                                paddingTop=\"2px\"\n                            >\n                                Próxima Página\n                            </Text>\n                            {\"  \"}\n                            <ChevronRightIcon\n                                boxSize=\"30px\"\n                                color={useColorModeValue(\"#053a63\", \"#e1e1e1\")}\n                            />\n                        </Flex>\n                    </Link>\n                ) : (\n                    <Box></Box>\n                )}\n            </HStack>\n        </Layout>\n    );\n}\n\nexport default PostListTemplate;\n\nexport const pageQuery = graphql`\n    query PostFeed($skip: Int!, $limit: Int!) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: $limit\n            skip: $skip\n            filter: { frontmatter: { layout: { eq: \"post\" } } }\n        ) {\n            edges {\n                node {\n                    excerpt(format: HTML, pruneLength: 200)\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        cover\n                        date(formatString: \"DD/MM/YYYY HH:mm\")\n                        isBanner\n                        layout\n                        special\n                        title\n                        category\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","_excluded3","_excluded4","BreadcrumbSeparator","props","ref","spacing","rest","separatorStyles","mx","separator","span","role","__css","displayName","BreadcrumbLink","isCurrentPage","as","className","href","styles","sharedProps","cx","link","a","BreadcrumbItem","isLastChild","children","clones","map","child","type","itemStyles","display","alignItems","item","_className","li","Breadcrumb","ownProps","_ownProps$spacing","_ownProps$separator","validChildren","count","index","nav","container","value","ol","PostCard","_ref","post","fullWidth","special","React","Stack","borderRadius","w","m","overflow","background","isBanner","useColorModeValue","position","direction","justifyContent","shadow","Box","maxHeight","maxWidth","Link","to","slug","Image","src","cover","alt","title","loading","style","marginTop","width","p","Text","fontSize","color","fontWeight","category","toUpperCase","post_date","Heading","Flex","flexGrow","flexDir","mt","pb","zIndex","dangerouslySetInnerHTML","__html","content","data","currentPage","numPages","pageContext","posts","allMarkdownRemark","edges","isFirst","isLast","prevPage","toString","nextPage","post_list","node","frontmatter","date","fields","excerpt","Layout","slide","name","SEO","description","lang","mb","ml","h","ChevronRightIcon","alignSelf","flexWrap","aviso","HStack","rel","ChevronLeftIcon","boxSize","height","paddingTop"],"sourceRoot":""}